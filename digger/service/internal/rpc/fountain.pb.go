// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.5.0
// source: digger/fountain.proto

package digger

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GDHoldValueIndexListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GDHoldValueIndexListReq) Reset() {
	*x = GDHoldValueIndexListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digger_fountain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GDHoldValueIndexListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GDHoldValueIndexListReq) ProtoMessage() {}

func (x *GDHoldValueIndexListReq) ProtoReflect() protoreflect.Message {
	mi := &file_digger_fountain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GDHoldValueIndexListReq.ProtoReflect.Descriptor instead.
func (*GDHoldValueIndexListReq) Descriptor() ([]byte, []int) {
	return file_digger_fountain_proto_rawDescGZIP(), []int{0}
}

func (x *GDHoldValueIndexListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GDHoldValueIndexListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type HoldValueIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Secucode      string  `protobuf:"bytes,2,opt,name=secucode,proto3" json:"secucode,omitempty"`
	Name          string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ValueIndex    float32 `protobuf:"fixed32,4,opt,name=valueIndex,proto3" json:"valueIndex,omitempty"`
	CumulantPrice string  `protobuf:"bytes,5,opt,name=cumulantPrice,proto3" json:"cumulantPrice,omitempty"`
	CumulantFocus string  `protobuf:"bytes,6,opt,name=cumulantFocus,proto3" json:"cumulantFocus,omitempty"`
	CumulantDate  string  `protobuf:"bytes,7,opt,name=cumulantDate,proto3" json:"cumulantDate,omitempty"`
	GdreduceRatio string  `protobuf:"bytes,8,opt,name=gdreduceRatio,proto3" json:"gdreduceRatio,omitempty"`
	EndDate       string  `protobuf:"bytes,9,opt,name=endDate,proto3" json:"endDate,omitempty"`
	CreateDate    int64   `protobuf:"varint,10,opt,name=createDate,proto3" json:"createDate,omitempty"`
}

func (x *HoldValueIndex) Reset() {
	*x = HoldValueIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digger_fountain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HoldValueIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HoldValueIndex) ProtoMessage() {}

func (x *HoldValueIndex) ProtoReflect() protoreflect.Message {
	mi := &file_digger_fountain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HoldValueIndex.ProtoReflect.Descriptor instead.
func (*HoldValueIndex) Descriptor() ([]byte, []int) {
	return file_digger_fountain_proto_rawDescGZIP(), []int{1}
}

func (x *HoldValueIndex) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HoldValueIndex) GetSecucode() string {
	if x != nil {
		return x.Secucode
	}
	return ""
}

func (x *HoldValueIndex) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HoldValueIndex) GetValueIndex() float32 {
	if x != nil {
		return x.ValueIndex
	}
	return 0
}

func (x *HoldValueIndex) GetCumulantPrice() string {
	if x != nil {
		return x.CumulantPrice
	}
	return ""
}

func (x *HoldValueIndex) GetCumulantFocus() string {
	if x != nil {
		return x.CumulantFocus
	}
	return ""
}

func (x *HoldValueIndex) GetCumulantDate() string {
	if x != nil {
		return x.CumulantDate
	}
	return ""
}

func (x *HoldValueIndex) GetGdreduceRatio() string {
	if x != nil {
		return x.GdreduceRatio
	}
	return ""
}

func (x *HoldValueIndex) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *HoldValueIndex) GetCreateDate() int64 {
	if x != nil {
		return x.CreateDate
	}
	return 0
}

type GDHoldValueIndexListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*HoldValueIndex `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int32             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GDHoldValueIndexListResp) Reset() {
	*x = GDHoldValueIndexListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digger_fountain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GDHoldValueIndexListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GDHoldValueIndexListResp) ProtoMessage() {}

func (x *GDHoldValueIndexListResp) ProtoReflect() protoreflect.Message {
	mi := &file_digger_fountain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GDHoldValueIndexListResp.ProtoReflect.Descriptor instead.
func (*GDHoldValueIndexListResp) Descriptor() ([]byte, []int) {
	return file_digger_fountain_proto_rawDescGZIP(), []int{2}
}

func (x *GDHoldValueIndexListResp) GetRows() []*HoldValueIndex {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *GDHoldValueIndexListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GPRecommendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GPRecommendListReq) Reset() {
	*x = GPRecommendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digger_fountain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPRecommendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPRecommendListReq) ProtoMessage() {}

func (x *GPRecommendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_digger_fountain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPRecommendListReq.ProtoReflect.Descriptor instead.
func (*GPRecommendListReq) Descriptor() ([]byte, []int) {
	return file_digger_fountain_proto_rawDescGZIP(), []int{3}
}

type GPRecommend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Secucode     string  `protobuf:"bytes,2,opt,name=secucode,proto3" json:"secucode,omitempty"`
	Name         string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	RMIndex      int32   `protobuf:"varint,4,opt,name=rMIndex,proto3" json:"rMIndex,omitempty"`
	PDecrease    int32   `protobuf:"varint,5,opt,name=pDecrease,proto3" json:"pDecrease,omitempty"`
	MaxPrice     float64 `protobuf:"fixed64,6,opt,name=maxPrice,proto3" json:"maxPrice,omitempty"` //最高价
	MaxPDay      string  `protobuf:"bytes,10,opt,name=maxPDay,proto3" json:"maxPDay,omitempty"`    //最高距离现在
	RMPrice      string  `protobuf:"bytes,11,opt,name=rMPrice,proto3" json:"rMPrice,omitempty"`
	GDDecrease   int32   `protobuf:"varint,12,opt,name=gDDecrease,proto3" json:"gDDecrease,omitempty"`
	State        string  `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"` //状态
	UpdateDate   string  `protobuf:"bytes,14,opt,name=updateDate,proto3" json:"updateDate,omitempty"`
	PresentPrice float64 `protobuf:"fixed64,15,opt,name=presentPrice,proto3" json:"presentPrice,omitempty"`
}

func (x *GPRecommend) Reset() {
	*x = GPRecommend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digger_fountain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPRecommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPRecommend) ProtoMessage() {}

func (x *GPRecommend) ProtoReflect() protoreflect.Message {
	mi := &file_digger_fountain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPRecommend.ProtoReflect.Descriptor instead.
func (*GPRecommend) Descriptor() ([]byte, []int) {
	return file_digger_fountain_proto_rawDescGZIP(), []int{4}
}

func (x *GPRecommend) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GPRecommend) GetSecucode() string {
	if x != nil {
		return x.Secucode
	}
	return ""
}

func (x *GPRecommend) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GPRecommend) GetRMIndex() int32 {
	if x != nil {
		return x.RMIndex
	}
	return 0
}

func (x *GPRecommend) GetPDecrease() int32 {
	if x != nil {
		return x.PDecrease
	}
	return 0
}

func (x *GPRecommend) GetMaxPrice() float64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *GPRecommend) GetMaxPDay() string {
	if x != nil {
		return x.MaxPDay
	}
	return ""
}

func (x *GPRecommend) GetRMPrice() string {
	if x != nil {
		return x.RMPrice
	}
	return ""
}

func (x *GPRecommend) GetGDDecrease() int32 {
	if x != nil {
		return x.GDDecrease
	}
	return 0
}

func (x *GPRecommend) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GPRecommend) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

func (x *GPRecommend) GetPresentPrice() float64 {
	if x != nil {
		return x.PresentPrice
	}
	return 0
}

type GPRecommendListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*GPRecommend `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GPRecommendListResp) Reset() {
	*x = GPRecommendListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digger_fountain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPRecommendListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPRecommendListResp) ProtoMessage() {}

func (x *GPRecommendListResp) ProtoReflect() protoreflect.Message {
	mi := &file_digger_fountain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPRecommendListResp.ProtoReflect.Descriptor instead.
func (*GPRecommendListResp) Descriptor() ([]byte, []int) {
	return file_digger_fountain_proto_rawDescGZIP(), []int{5}
}

func (x *GPRecommendListResp) GetRows() []*GPRecommend {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *GPRecommendListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RecommendSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx      int32  `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	Secucode string `protobuf:"bytes,2,opt,name=secucode,proto3" json:"secucode,omitempty"`
	Ratio    int32  `protobuf:"varint,3,opt,name=ratio,proto3" json:"ratio,omitempty"`
}

func (x *RecommendSort) Reset() {
	*x = RecommendSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digger_fountain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendSort) ProtoMessage() {}

func (x *RecommendSort) ProtoReflect() protoreflect.Message {
	mi := &file_digger_fountain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendSort.ProtoReflect.Descriptor instead.
func (*RecommendSort) Descriptor() ([]byte, []int) {
	return file_digger_fountain_proto_rawDescGZIP(), []int{6}
}

func (x *RecommendSort) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *RecommendSort) GetSecucode() string {
	if x != nil {
		return x.Secucode
	}
	return ""
}

func (x *RecommendSort) GetRatio() int32 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

var File_digger_fountain_proto protoreflect.FileDescriptor

var file_digger_fountain_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22,
	0x47, 0x0a, 0x17, 0x47, 0x44, 0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xc0, 0x02, 0x0a, 0x0e, 0x48, 0x6f, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x63, 0x75, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x63, 0x75, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6f, 0x63,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x6e, 0x74, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x6d, 0x75, 0x6c,
	0x61, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67,
	0x64, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x67, 0x64, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x5c, 0x0a, 0x18, 0x47,
	0x44, 0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x48,
	0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x50, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0xcf, 0x02, 0x0a, 0x0b, 0x47, 0x50, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x4d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x4d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x44, 0x65,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x44,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x44, 0x61, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x44, 0x61, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x4d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x4d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x44, 0x44, 0x65, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x44, 0x44,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x54, 0x0a, 0x13, 0x47, 0x50, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x50, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x53, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x63, 0x75, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x75, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x32, 0xb1, 0x01, 0x0a,
	0x08, 0x46, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x59, 0x0a, 0x14, 0x47, 0x44, 0x48,
	0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x44, 0x48, 0x6f, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x44, 0x48, 0x6f,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x50, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x47, 0x50, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x50, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b, 0x64, 0x69, 0x67, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_digger_fountain_proto_rawDescOnce sync.Once
	file_digger_fountain_proto_rawDescData = file_digger_fountain_proto_rawDesc
)

func file_digger_fountain_proto_rawDescGZIP() []byte {
	file_digger_fountain_proto_rawDescOnce.Do(func() {
		file_digger_fountain_proto_rawDescData = protoimpl.X.CompressGZIP(file_digger_fountain_proto_rawDescData)
	})
	return file_digger_fountain_proto_rawDescData
}

var file_digger_fountain_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_digger_fountain_proto_goTypes = []interface{}{
	(*GDHoldValueIndexListReq)(nil),  // 0: digger.GDHoldValueIndexListReq
	(*HoldValueIndex)(nil),           // 1: digger.HoldValueIndex
	(*GDHoldValueIndexListResp)(nil), // 2: digger.GDHoldValueIndexListResp
	(*GPRecommendListReq)(nil),       // 3: digger.GPRecommendListReq
	(*GPRecommend)(nil),              // 4: digger.GPRecommend
	(*GPRecommendListResp)(nil),      // 5: digger.GPRecommendListResp
	(*RecommendSort)(nil),            // 6: digger.RecommendSort
}
var file_digger_fountain_proto_depIdxs = []int32{
	1, // 0: digger.GDHoldValueIndexListResp.rows:type_name -> digger.HoldValueIndex
	4, // 1: digger.GPRecommendListResp.rows:type_name -> digger.GPRecommend
	0, // 2: digger.Fountain.GDHoldValueIndexList:input_type -> digger.GDHoldValueIndexListReq
	3, // 3: digger.Fountain.GPRecommendList:input_type -> digger.GPRecommendListReq
	2, // 4: digger.Fountain.GDHoldValueIndexList:output_type -> digger.GDHoldValueIndexListResp
	5, // 5: digger.Fountain.GPRecommendList:output_type -> digger.GPRecommendListResp
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_digger_fountain_proto_init() }
func file_digger_fountain_proto_init() {
	if File_digger_fountain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_digger_fountain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GDHoldValueIndexListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_digger_fountain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HoldValueIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_digger_fountain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GDHoldValueIndexListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_digger_fountain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPRecommendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_digger_fountain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPRecommend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_digger_fountain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPRecommendListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_digger_fountain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_digger_fountain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_digger_fountain_proto_goTypes,
		DependencyIndexes: file_digger_fountain_proto_depIdxs,
		MessageInfos:      file_digger_fountain_proto_msgTypes,
	}.Build()
	File_digger_fountain_proto = out.File
	file_digger_fountain_proto_rawDesc = nil
	file_digger_fountain_proto_goTypes = nil
	file_digger_fountain_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file11-2
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FountainClient is the client API for Fountain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FountainClient interface {
	// ==>>TODO 125: FountainClientGDHoldValueIndexList
	// ==>>TODO 127: //GDHoldValueIndexList(ctx context.Context, in *GDHoldValueIndexListReq, opts ...grpc.CallOption) (*GDHoldValueIndexListResp, error)//
	GDHoldValueIndexList(ctx context.Context, in *GDHoldValueIndexListReq, opts ...grpc.CallOption) (*GDHoldValueIndexListResp, error)
	// ==>>TODO 125: FountainClientGPRecommendList
	// ==>>TODO 127: //GPRecommendList(ctx context.Context, in *GPRecommendListReq, opts ...grpc.CallOption) (*GPRecommendListResp, error)//
	GPRecommendList(ctx context.Context, in *GPRecommendListReq, opts ...grpc.CallOption) (*GPRecommendListResp, error)
}

type fountainClient struct {
	cc grpc.ClientConnInterface
}

func NewFountainClient(cc grpc.ClientConnInterface) FountainClient {
	return &fountainClient{cc}
}

func (c *fountainClient) GDHoldValueIndexList(ctx context.Context, in *GDHoldValueIndexListReq, opts ...grpc.CallOption) (*GDHoldValueIndexListResp, error) {
	out := new(GDHoldValueIndexListResp)
	err := c.cc.Invoke(ctx, "/digger.Fountain/GDHoldValueIndexList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fountainClient) GPRecommendList(ctx context.Context, in *GPRecommendListReq, opts ...grpc.CallOption) (*GPRecommendListResp, error) {
	out := new(GPRecommendListResp)
	err := c.cc.Invoke(ctx, "/digger.Fountain/GPRecommendList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FountainServer is the server API for Fountain service.
type FountainServer interface {
	GDHoldValueIndexList(context.Context, *GDHoldValueIndexListReq) (*GDHoldValueIndexListResp, error)
	GPRecommendList(context.Context, *GPRecommendListReq) (*GPRecommendListResp, error)
}

// UnimplementedFountainServer can be embedded to have forward compatible implementations.
type UnimplementedFountainServer struct {
}

func (*UnimplementedFountainServer) GDHoldValueIndexList(context.Context, *GDHoldValueIndexListReq) (*GDHoldValueIndexListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GDHoldValueIndexList not implemented")
}
func (*UnimplementedFountainServer) GPRecommendList(context.Context, *GPRecommendListReq) (*GPRecommendListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GPRecommendList not implemented")
}

func RegisterFountainServer(s *grpc.Server, srv FountainServer) {
	s.RegisterService(&_Fountain_serviceDesc, srv)
}

func _Fountain_GDHoldValueIndexList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GDHoldValueIndexListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FountainServer).GDHoldValueIndexList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/digger.Fountain/GDHoldValueIndexList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FountainServer).GDHoldValueIndexList(ctx, req.(*GDHoldValueIndexListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fountain_GPRecommendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GPRecommendListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FountainServer).GPRecommendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/digger.Fountain/GPRecommendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FountainServer).GPRecommendList(ctx, req.(*GPRecommendListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Fountain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "digger.Fountain",
	HandlerType: (*FountainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GDHoldValueIndexList",
			Handler:    _Fountain_GDHoldValueIndexList_Handler,
		},
		{
			MethodName: "GPRecommendList",
			Handler:    _Fountain_GPRecommendList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "digger/fountain.proto",
}
