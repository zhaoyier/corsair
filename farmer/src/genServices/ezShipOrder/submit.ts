/**
 * This file is auto-generated by protobufgen
 * Don't change manually
 */

import { ResultResp as AppcommonResultResp } from "../appcommon/common_public";
import { DeliveryMethod as EzShipOMSDeliveryMethod } from "../ezShipOMS/public";
import webapi from "../webapi";

export enum UserPlatform {
	UserPlatformUnknown = "UserPlatformUnknown",
	UserPlatformOrder = "UserPlatformOrder",
	UserPlatformOms = "UserPlatformOms",
}


export enum MakeCheckoutActionType {
	MakeCheckoutActionTypeContinue = "MakeCheckoutActionTypeContinue",
	MakeCheckoutActionTypeBack = "MakeCheckoutActionTypeBack",
	MakeCheckoutActionTypeRefresh = "MakeCheckoutActionTypeRefresh",
	MakeCheckoutActionTypeModifyReceipient = "MakeCheckoutActionTypeModifyReceipient",
}


export enum WarehouseType {
	WarehouseTypeInvalid = "WarehouseTypeInvalid",
	WarehouseTypeGuangzhou = "WarehouseTypeGuangzhou",
	WarehouseTypeShanghai = "WarehouseTypeShanghai",
	WarehouseTypeTaiwan = "WarehouseTypeTaiwan",
	WarehouseTypeUSA = "WarehouseTypeUSA",
}


export enum AddedServiceType {
	AddedServiceTypeInvalid = "AddedServiceTypeInvalid",
	AddedServiceTypePhoto = "AddedServiceTypePhoto",
	AddedServiceTypeRePackage = "AddedServiceTypeRePackage",
}


export enum DeliveryOper {
	DeliveryOper_Invalid = "DeliveryOper_Invalid",
	DeliveryOper_ArrangeDelivery = "DeliveryOper_ArrangeDelivery",
	DeliveryOper_EditDelivery = "DeliveryOper_EditDelivery",
	DeliveryOper_CancelDelivery = "DeliveryOper_CancelDelivery",
	DeliveryOper_ConfirmDelivery = "DeliveryOper_ConfirmDelivery",
}


export enum OrderStatusCode {
	Invalid_Code = "Invalid_Code",
	Cancelled_Code = "Cancelled_Code",
	ShipToWarehouse_Code = "ShipToWarehouse_Code",
	SignedByWarehouse = "SignedByWarehouse",
	ReadyToShip_Code = "ReadyToShip_Code",
	AwaitingPayment = "AwaitingPayment",
	ProcessingShipment_Code = "ProcessingShipment_Code",
	PreparingToShip_Code = "PreparingToShip_Code",
	ShippingToDestination_Code = "ShippingToDestination_Code",
	DeliveryWarehouseOnShelf = "DeliveryWarehouseOnShelf",
	ArrivedInSG_Code = "ArrivedInSG_Code",
	PendingForDelivery_Code = "PendingForDelivery_Code",
	ReadyForDelivery_Code = "ReadyForDelivery_Code",
	OutForDelivery_Code = "OutForDelivery_Code",
	Delivered_Code = "Delivered_Code",
	PointSign = "PointSign",
	ReadyForCollection_Code = "ReadyForCollection_Code",
	Complete_Code = "Complete_Code",
}


export enum AftersaleTypeEnum {
	Invalid_Type = "Invalid_Type",
	Reissue_Type = "Reissue_Type",
}


export enum BillType {
	BillInvalid = "BillInvalid",
	BillEzShip = "BillEzShip",
}


export enum BillStatus {
	Pending = "Pending",
	Paid = "Paid",
	Cancelled = "Cancelled",
	PendingVerification = "PendingVerification",
}


export enum FrontRemarkType {
	FrontRemarkTypeUnknown = "FrontRemarkTypeUnknown",
	FrontRemarkTypeUser = "FrontRemarkTypeUser",
	FrontRemarkTypeService = "FrontRemarkTypeService",
}


export enum MalaysiaCode {
	InvalidCode = "InvalidCode",
	WestCode = "WestCode",
	EastCode = "EastCode",
}



export interface RpcDoAutoConfirmJobReq {
	ScanAgain?: boolean;
	ByShipmentIds?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	ShipmentIds?: string[];
	ByDate?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	UpdateDateFro?: string;
	/**
	 * @pattern ^\d+$
	 */
	UpdateDateBeh?: string;
}

export interface SubmitNewOrderReq {
	order?: SimpleOrderInfo;
}

export interface CancelOrderReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	platformId?: UserPlatform;
}

export interface EditOrderReq {
	order?: SimpleOrderInfo;
}

export interface SubmitPayHookReq {
	/**
	 * @pattern ^\d+$
	 */
	billId?: string;
	/**
	 * @pattern ^\d+$
	 */
	customerId?: string;
	journalNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	payAmount?: string;
	paymethod?: string;
	catalog?: string;
	client?: string;
	/**
	 * @pattern ^\d+$
	 */
	payDate?: string;
	payPlatform?: string;
}

export interface SubmitCreatReq {
	/**
	 * @pattern ^\d+$
	 */
	orderIds?: string[];
	checkoutInfo?: CheckoutInfo;
}

export interface SubmitCreatResp {
	/**
	 * @pattern ^\d+$
	 */
	billId?: string;
	billType?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	totalFee?: number;
	result?: AppcommonResultResp;
	actionType?: MakeCheckoutActionType;
}

export interface SubmitCancelReq {
	/**
	 * @pattern ^\d+$
	 */
	billId?: string;
}

export interface RpcUpdateOrderStatusReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	statusId?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
}

export interface Warehouse {
	id?: WarehouseType;
	name?: string;
	isSuportAddItem?: boolean;
}

export interface CarrierCompany {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	name?: string;
	trackingNo?: string;
}

export interface AddedService {
	addedServiceType?: AddedServiceType;
	name?: string;
	tips?: string;
	fee?: string;
	images?: string[];
	/**
	 * @pattern ^\d+$
	 */
	serviceId?: string;
}

export interface RpcCalFeeReq {
	catalog?: string;
	orders?: CalFeeOrder[];
	conpon?: string;
	/**
	 * @pattern ^\d+$
	 */
	shipmentTypeId?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryTypeId?: string;
	warehouseCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	region?: string;
	destCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargeWeight?: string;
	isInsurance?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	deliveryMethodId?: string;
	deliveryMethod?: string;
	/**
	 * @pattern ^\d+$
	 */
	customerId?: string;
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	originalChargeWeight?: string;
}

export interface CalFeeOrder {
	/**
	 * @pattern ^\d+$
	 */
	OrderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargeWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	warehouseStorageDate?: string;
	hasAdditionalServices?: boolean;
	additionalServices?: AddedService[];
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	originalChargeWeight?: string;
	itemInfos?: DeclaredItemInfo[];
}

export interface RpcCalFeeResp {
	orders?: CalFeeOrderDetail[];
	/**
	 * @pattern ^\d+$
	 */
	shippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	gst?: string;
	/**
	 * @pattern ^\d+$
	 */
	storageFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	insureFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalDiscountAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	photoServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	repackageServiceFee?: string;
}

export interface CalFeeOrderDetail {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	shippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	gst?: string;
	/**
	 * @pattern ^\d+$
	 */
	storageFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	insureFee?: string;
	discountInfos?: DiscountInfo[];
	/**
	 * @pattern ^\d+$
	 */
	totalDiscountAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	photoServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	repackageServiceFee?: string;
}

export interface DeliveryDateAndTimeSlotReq {
	deliveryMethod?: EzShipOMSDeliveryMethod;
	/**
	 * @pattern ^\d+$
	 */
	homeAddressId?: string;
	/**
	 * @pattern ^\d+$
	 */
	stationId?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargeWeight?: string;
}

export interface DeliveryDateAndTimeSlotResp {
	dateAndTimeSlots?: DateAndTimeSlot[];
	result?: AppcommonResultResp;
}

export interface DateAndTimeSlot {
	/**
	 * @pattern ^\d+$
	 */
	date?: string;
	timeSlots?: TimeSlot[];
}

export interface TimeSlot {
	/**
	 * @pattern ^\d+$
	 */
	timeSlotId?: string;
	timeSlotName?: string;
}

export interface EditDeliveryInfoReq {
	option?: DeliveryOper;
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	recipient?: string;
	phone?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	timeSlotId?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryStationId?: string;
	/**
	 * @pattern ^\d+$
	 */
	homeAddressId?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderIds?: string[];
	/**
	 * @pattern ^\d+$
	 */
	msgID?: string;
}

export interface DiscountInfo {
	discountId?: string;
	/**
	 * @pattern ^\d+$
	 */
	discountAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	seq?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargeType?: string;
}

export interface ShipCategory {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	name?: string;
	isDefault?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	declaredMin?: string;
}

export interface ItemInfo {
	category?: ShipCategory;
	productName?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	qty?: number;
	packageCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	/**
	 * @pattern ^\d+$
	 */
	itemID?: string;
}

export interface SimpleOrderInfo {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	orderNumber?: string;
	warehouse?: Warehouse;
	carrierCompany?: CarrierCompany;
	addedServices?: AddedService[];
	items?: ItemInfo[];
	/**
	 * @pattern ^\d+$
	 */
	createdDate?: string;
	status?: OrderStatusCode;
	price?: string;
	isAftersale?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	remark?: string;
	frontRemark?: FrontRemark;
	/**
	 * @pattern ^\d+$
	 */
	inLocalWarehouseDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	storageChargeCountdown?: string;
	statusDescriptive?: string;
	statusHistory?: OrderStatus[];
	logisticses?: LogisticsInfo[];
	eta?: string;
	parcelNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	parcelDate?: string;
}

export interface LogisticsInfo {
	/**
	 * @pattern ^\d+$
	 */
	status?: string;
	describe?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
}

export interface OrderStatus {
	status?: OrderStatusCode;
	describe?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
}

export interface FrontRemark {
	has?: boolean;
	needRe?: boolean;
}

export interface ShippingMethod {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	name?: string;
	desc?: string;
	price?: string;
	code?: string;
	tmsCode?: string;
	isSelected?: boolean;
}

export interface DeliveryInfo {
	/**
	 * @pattern ^\d+$
	 */
	deliveryMethodId?: string;
	deliveryMethodCode?: string;
	deliveryMethodName?: string;
	address?: string;
	recipient?: string;
	phone?: string;
	/**
	 * @pattern ^\d+$
	 */
	pickupPeriodId?: string;
	deliveryFee?: string;
	isRecommend?: boolean;
	deliveryTime?: string;
}

export interface ElementInfo {
	insuredEnabled?: boolean;
	isInsurance?: boolean;
	couponCode?: string;
	isCouponCodeEnabled?: boolean;
	homeDeliveryAvailable?: boolean;
	selfDeliveryAvailable?: boolean;
	isAllStationNotAvailable?: boolean;
	isAllSelfCollectionFree?: boolean;
	allStationNotAvailableMsg?: string;
}

export interface CheckoutInfo {
	deliveryInfo?: DeliveryInfo;
	shippingMethods?: ShippingMethod[];
	elementInfo?: ElementInfo;
}

export interface DeclaredInfo {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	itemInfos?: DeclaredItemInfo[];
}

export interface DeclaredItemInfo {
	/**
	 * @pattern ^\d+$
	 */
	itemID?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	qty?: number;
}

export interface UserSubmitStatusSyncReq {
	/**
	 * @pattern ^\d+$
	 */
	orderIds?: string[];
	/**
	 * @pattern ^\d+$
	 */
	statusId?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	msgID?: string;
}

export interface PayOrderBillReq {
	/**
	 * @pattern ^\d+$
	 */
	billId?: string;
	billType?: string;
	password?: string;
}

export interface SyncFrontRemark {
	/**
	 * @pattern ^\d+$
	 */
	remarkId?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	remarkType?: FrontRemarkType;
	remark?: string;
	enclosureLink?: string[];
	userHead?: string;
	isReply?: boolean;
	replyRemark?: string;
	replyEnclosureLink?: string[];
	serviceHead?: string;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	msgID?: string;
}

export interface FrontRemarkInfo {
	/**
	 * @pattern ^\d+$
	 */
	remarkId?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	remarkType?: FrontRemarkType;
	remark?: string;
	enclosureLink?: string[];
	userHead?: string;
	isReply?: boolean;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
}

export interface GetFrontRemarkReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface GetFrontRemarkResp {
	result?: AppcommonResultResp;
	remarks?: FrontRemarkInfo[];
}

export interface ReplyFrontRemarkReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	remarkIds?: string[];
	replyRemark?: string;
	replyEnclosureLink?: string[];
	nickName?: string;
	/**
	 * @pattern ^\d+$
	 */
	msgID?: string;
}

export interface ReplyFrontRemarkResp {
	result?: AppcommonResultResp;
}

export interface SetOrdersPendingVerificationReq {
	Catalog?: string;
	/**
	 * @pattern ^\d+$
	 */
	BillIds?: string[];
	BillStatus?: BillStatus;
}

export interface CalculatorReqItem {
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	volumeWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	/**
	 * @pattern ^\d+$
	 */
	qty?: string;
}

export interface CalculatorReq {
	warehouse?: WarehouseType;
	Malaysia?: MalaysiaCode;
	items?: CalculatorReqItem[];
}

export interface CalculatorRespItem {
	shippingMethod?: string;
	/**
	 * @pattern ^\d+$
	 */
	shippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	gstFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	minimumShippingDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	maximumShippingDate?: string;
}

export interface CalculatorResp {
	/**
	 * @pattern ^\d+$
	 */
	chargeWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	items?: CalculatorRespItem[];
}

export interface ParcelEvaluationReq {
	parcelNum?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	evaluationType?: number;
	content?: string;
}

export interface ParcelEvaluationResp {
	result?: AppcommonResultResp;
}

export interface SyncAfterSaleOrderReq {
	oldPackageCode?: string;
	newPackageCode?: string;
	oldOrderNumber?: string;
	newOrderNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	oldOrderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	newOrderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	oldShipmentId?: string;
	/**
	 * @pattern ^\d+$
	 */
	newShipmentId?: string;
	operator?: string;
	isBigPackage?: boolean;
	newLogisticsNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	msgID?: string;
}

export interface SyncAfterSaleOrderResp {
	result?: AppcommonResultResp;
}

export interface GetUserFeedbackReq {

}

export interface FeedBackUnit {
	nickName?: string;
	avatar?: string;
	feedbackTime?: string;
	/**
	 * @minimum 0
	 */
	star?: number;
	content?: string;
}

export interface GetUserFeedbackResp {
	result?: AppcommonResultResp;
	feedbacks?: FeedBackUnit[];
}

export interface UploadUserFeedbackReq {
	token?: string;
	catalog?: string;
	feedbacks?: FeedBackUnit[];
	clearOld?: boolean;
}

export interface UploadUserFeedbackResp {
	result?: AppcommonResultResp;
	/**
	 * @pattern ^\d+$
	 */
	rowsAffected?: string;
}

export interface ReloadUserFeedbackReq {
	token?: string;
}

export interface ReloadUserFeedbackResp {
	result?: AppcommonResultResp;
}

export interface SetEzShipOrderMessageQueueStatusReq {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	/**
	 * @pattern ^\d+$
	 */
	status?: string;
	requestor?: string;
}

export interface SetEzShipOrderMessageQueueStatusResp {
	result?: AppcommonResultResp;
}



export function SubmitNewOrder(payload: Partial<SubmitNewOrderReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/SubmitNewOrder", payload);
}

export function CancelOrder(payload: Partial<CancelOrderReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/CancelOrder", payload);
}

export function EditOrder(payload: Partial<EditOrderReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/EditOrder", payload);
}

export function SubmitPayHook(payload: Partial<SubmitPayHookReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/SubmitPayHook", payload);
}

export function SetOrdersPendingVerification(payload: Partial<SetOrdersPendingVerificationReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/SetOrdersPendingVerification", payload);
}

export function PayOrderBill(payload: Partial<PayOrderBillReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/PayOrderBill", payload);
}

export function SubmitShipmentOrders(payload: Partial<SubmitCreatReq>) {
	return webapi<SubmitCreatResp>("ezShipOrder.OrderPublic/SubmitShipmentOrders", payload);
}

export function SubmitCancel(payload: Partial<SubmitCancelReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/SubmitCancel", payload);
}

export function RpcUpdateOrderStatus(payload: Partial<RpcUpdateOrderStatusReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/RpcUpdateOrderStatus", payload);
}

export function RpcCalFee(payload: Partial<RpcCalFeeReq>) {
	return webapi<RpcCalFeeResp>("ezShipOrder.OrderPublic/RpcCalFee", payload);
}

export function GetDeliveryDateAndTimeSlot(payload: Partial<DeliveryDateAndTimeSlotReq>) {
	return webapi<DeliveryDateAndTimeSlotResp>("ezShipOrder.OrderPublic/GetDeliveryDateAndTimeSlot", payload);
}

export function EditDeliveryInfo(payload: Partial<EditDeliveryInfoReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/EditDeliveryInfo", payload);
}

export function GetFrontRemark(payload: Partial<GetFrontRemarkReq>) {
	return webapi<GetFrontRemarkResp>("ezShipOrder.OrderPublic/GetFrontRemark", payload);
}

export function ReplyFrontRemark(payload: Partial<ReplyFrontRemarkReq>) {
	return webapi<ReplyFrontRemarkResp>("ezShipOrder.OrderPublic/ReplyFrontRemark", payload);
}

export function FeeCalculator(payload: Partial<CalculatorReq>) {
	return webapi<CalculatorResp>("ezShipOrder.OrderPublic/FeeCalculator", payload);
}

export function ParcelEvaluation(payload: Partial<ParcelEvaluationReq>) {
	return webapi<ParcelEvaluationResp>("ezShipOrder.OrderPublic/ParcelEvaluation", payload);
}

export function RpcDoAutoConfirmJob(payload: Partial<RpcDoAutoConfirmJobReq>) {
	return webapi<AppcommonResultResp>("ezShipOrder.OrderPublic/RpcDoAutoConfirmJob", payload);
}

export function SyncAfterSaleOrder(payload: Partial<SyncAfterSaleOrderReq>) {
	return webapi<SyncAfterSaleOrderResp>("ezShipOrder.OrderPublic/SyncAfterSaleOrder", payload);
}

export function GetUserFeedback(payload: Partial<GetUserFeedbackReq>) {
	return webapi<GetUserFeedbackResp>("ezShipOrder.OrderPublic/GetUserFeedback", payload);
}

export function UploadUserFeedback(payload: Partial<UploadUserFeedbackReq>) {
	return webapi<UploadUserFeedbackResp>("ezShipOrder.OrderPublic/UploadUserFeedback", payload);
}

export function ReloadUserFeedback(payload: Partial<ReloadUserFeedbackReq>) {
	return webapi<ReloadUserFeedbackResp>("ezShipOrder.OrderPublic/ReloadUserFeedback", payload);
}

export function SetEzShipOrderMessageQueueStatus(payload: Partial<SetEzShipOrderMessageQueueStatusReq>) {
	return webapi<SetEzShipOrderMessageQueueStatusResp>("ezShipOrder.OrderPublic/SetEzShipOrderMessageQueueStatus", payload);
}


export default {
	SubmitNewOrder,
	CancelOrder,
	EditOrder,
	SubmitPayHook,
	SetOrdersPendingVerification,
	PayOrderBill,
	SubmitShipmentOrders,
	SubmitCancel,
	RpcUpdateOrderStatus,
	RpcCalFee,
	GetDeliveryDateAndTimeSlot,
	EditDeliveryInfo,
	GetFrontRemark,
	ReplyFrontRemark,
	FeeCalculator,
	ParcelEvaluation,
	RpcDoAutoConfirmJob,
	SyncAfterSaleOrder,
	GetUserFeedback,
	UploadUserFeedback,
	ReloadUserFeedback,
	SetEzShipOrderMessageQueueStatus,
};