/**
 * This file is auto-generated by protobufgen
 * Don't change manually
 */



export interface FileDescriptorSet {
	file?: FileDescriptorProto[];
}

export interface FileDescriptorProto {
	name?: string;
	package?: string;
	dependency?: string[];
	public_dependency?: number[];
	weak_dependency?: number[];
	message_type?: DescriptorProto[];
	enum_type?: EnumDescriptorProto[];
	service?: ServiceDescriptorProto[];
	extension?: FieldDescriptorProto[];
	options?: FileOptions;
	source_code_info?: SourceCodeInfo;
	syntax?: string;
}

export interface DescriptorProtoExtensionRange {
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	start?: number;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	end?: number;
}

export interface DescriptorProtoReservedRange {
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	start?: number;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	end?: number;
}

export interface DescriptorProto {
	name?: string;
	field?: FieldDescriptorProto[];
	extension?: FieldDescriptorProto[];
	nested_type?: DescriptorProto[];
	enum_type?: EnumDescriptorProto[];
	extension_range?: DescriptorProtoExtensionRange[];
	oneof_decl?: OneofDescriptorProto[];
	options?: MessageOptions;
	reserved_range?: DescriptorProtoReservedRange[];
	reserved_name?: string[];
}

export enum FieldDescriptorProtoType {
	TYPE_DOUBLE = "TYPE_DOUBLE",
	TYPE_FLOAT = "TYPE_FLOAT",
	TYPE_INT64 = "TYPE_INT64",
	TYPE_UINT64 = "TYPE_UINT64",
	TYPE_INT32 = "TYPE_INT32",
	TYPE_FIXED64 = "TYPE_FIXED64",
	TYPE_FIXED32 = "TYPE_FIXED32",
	TYPE_BOOL = "TYPE_BOOL",
	TYPE_STRING = "TYPE_STRING",
	TYPE_GROUP = "TYPE_GROUP",
	TYPE_MESSAGE = "TYPE_MESSAGE",
	TYPE_BYTES = "TYPE_BYTES",
	TYPE_UINT32 = "TYPE_UINT32",
	TYPE_ENUM = "TYPE_ENUM",
	TYPE_SFIXED32 = "TYPE_SFIXED32",
	TYPE_SFIXED64 = "TYPE_SFIXED64",
	TYPE_SINT32 = "TYPE_SINT32",
	TYPE_SINT64 = "TYPE_SINT64",
}


export enum FieldDescriptorProtoLabel {
	LABEL_OPTIONAL = "LABEL_OPTIONAL",
	LABEL_REQUIRED = "LABEL_REQUIRED",
	LABEL_REPEATED = "LABEL_REPEATED",
}


export interface FieldDescriptorProto {
	name?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	number?: number;
	label?: FieldDescriptorProtoLabel;
	type?: FieldDescriptorProtoType;
	type_name?: string;
	extendee?: string;
	default_value?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	oneof_index?: number;
	json_name?: string;
	options?: FieldOptions;
}

export interface OneofDescriptorProto {
	name?: string;
	options?: OneofOptions;
}

export interface EnumDescriptorProto {
	name?: string;
	value?: EnumValueDescriptorProto[];
	options?: EnumOptions;
}

export interface EnumValueDescriptorProto {
	name?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	number?: number;
	options?: EnumValueOptions;
}

export interface ServiceDescriptorProto {
	name?: string;
	method?: MethodDescriptorProto[];
	options?: ServiceOptions;
}

export interface MethodDescriptorProto {
	name?: string;
	input_type?: string;
	output_type?: string;
	options?: MethodOptions;
	client_streaming?: boolean;
	server_streaming?: boolean;
}

export enum FileOptionsOptimizeMode {
	SPEED = "SPEED",
	CODE_SIZE = "CODE_SIZE",
	LITE_RUNTIME = "LITE_RUNTIME",
}


export interface FileOptions {
	java_package?: string;
	java_outer_classname?: string;
	java_multiple_files?: boolean;
	java_generate_equals_and_hash?: boolean;
	java_string_check_utf8?: boolean;
	optimize_for?: FileOptionsOptimizeMode;
	go_package?: string;
	cc_generic_services?: boolean;
	java_generic_services?: boolean;
	py_generic_services?: boolean;
	deprecated?: boolean;
	cc_enable_arenas?: boolean;
	objc_class_prefix?: string;
	csharp_namespace?: string;
	swift_prefix?: string;
	uninterpreted_option?: UninterpretedOption[];
}

export interface MessageOptions {
	message_set_wire_format?: boolean;
	no_standard_descriptor_accessor?: boolean;
	deprecated?: boolean;
	map_entry?: boolean;
	uninterpreted_option?: UninterpretedOption[];
}

export enum FieldOptionsCType {
	STRING = "STRING",
	CORD = "CORD",
	STRING_PIECE = "STRING_PIECE",
}


export enum FieldOptionsJSType {
	JS_NORMAL = "JS_NORMAL",
	JS_STRING = "JS_STRING",
	JS_NUMBER = "JS_NUMBER",
}


export interface FieldOptions {
	ctype?: FieldOptionsCType;
	packed?: boolean;
	jstype?: FieldOptionsJSType;
	lazy?: boolean;
	deprecated?: boolean;
	weak?: boolean;
	uninterpreted_option?: UninterpretedOption[];
}

export interface OneofOptions {
	uninterpreted_option?: UninterpretedOption[];
}

export interface EnumOptions {
	allow_alias?: boolean;
	deprecated?: boolean;
	uninterpreted_option?: UninterpretedOption[];
}

export interface EnumValueOptions {
	deprecated?: boolean;
	uninterpreted_option?: UninterpretedOption[];
}

export interface ServiceOptions {
	deprecated?: boolean;
	uninterpreted_option?: UninterpretedOption[];
}

export enum MethodOptionsIdempotencyLevel {
	IDEMPOTENCY_UNKNOWN = "IDEMPOTENCY_UNKNOWN",
	NO_SIDE_EFFECTS = "NO_SIDE_EFFECTS",
	IDEMPOTENT = "IDEMPOTENT",
}


export interface MethodOptions {
	deprecated?: boolean;
	idempotency_level?: MethodOptionsIdempotencyLevel;
	uninterpreted_option?: UninterpretedOption[];
}

export interface UninterpretedOptionNamePart {
	name_part?: string;
	is_extension?: boolean;
}

export interface UninterpretedOption {
	name?: UninterpretedOptionNamePart[];
	identifier_value?: string;
	/**
	 * @pattern ^\d+$
	 */
	positive_int_value?: string;
	/**
	 * @pattern ^\d+$
	 */
	negative_int_value?: string;
	/**
	 * @minimum 0
	 */
	double_value?: number;
	string_value?: string;
	aggregate_value?: string;
}

export interface SourceCodeInfoLocation {
	path?: number[];
	span?: number[];
	leading_comments?: string;
	trailing_comments?: string;
	leading_detached_comments?: string[];
}

export interface SourceCodeInfo {
	location?: SourceCodeInfoLocation[];
}

export interface GeneratedCodeInfoAnnotation {
	path?: number[];
	source_file?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	begin?: number;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	end?: number;
}

export interface GeneratedCodeInfo {
	annotation?: GeneratedCodeInfoAnnotation[];
}