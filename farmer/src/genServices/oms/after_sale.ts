/**
 * This file is auto-generated by protobufgen
 * Don't change manually
 */

import { OrderItemPair as OmsOrderItemPair, OrderItemPairWithQty as OmsOrderItemPairWithQty } from "../oms/common";
import { Empty as CommonEmpty } from "../common/empty";
import webapi from "../webapi";

export enum AftersaleOrderType {
	AftersaleOrderTypeNone = "AftersaleOrderTypeNone",
	AftersaleOrderTypeReissue = "AftersaleOrderTypeReissue",
	AftersaleOrderTypeRefund = "AftersaleOrderTypeRefund",
	AftersaleOredrTypeAll = "AftersaleOredrTypeAll",
	AftersaleOredrTypeExchang = "AftersaleOredrTypeExchang",
}


export enum AftersaleOrderStatus {
	AftersaleOrderStatusInvalid = "AftersaleOrderStatusInvalid",
	AftersaleOrderStatusReviewing = "AftersaleOrderStatusReviewing",
	AftersaleOrderStatusReviewed = "AftersaleOrderStatusReviewed",
	AftersaleOrderStatusRejected = "AftersaleOrderStatusRejected",
	AftersaleOrderStatusCanceled = "AftersaleOrderStatusCanceled",
	AftersaleOrderStatusCompleted = "AftersaleOrderStatusCompleted",
	AftersaleOrderStatusTerminated = "AftersaleOrderStatusTerminated",
	AftersaleOrderStatusAll = "AftersaleOrderStatusAll",
	AftersaleOrderStatusPending = "AftersaleOrderStatusPending",
}


export enum RespParty {
	RespPartyNone = "RespPartyNone",
	RespPartySeller = "RespPartySeller",
	RespPartyEzbuy = "RespPartyEzbuy",
}



export interface GetAftersaleOrderByParcelCodesReq {
	items?: ParcelItems[];
}

export interface GetAftersaleOrderByParcelCodesResp {
	items?: ParcelOrderItemDetail[];
}

export interface IsPackageHasPendingAftersaleSKUReq {
	packageNumber?: string;
}

export interface IsPackageHasPendingAftersaleSKUResp {
	ok?: boolean;
}

export interface GetReissueableSKUsQtyReq {
	items?: OmsOrderItemPair[];
	packageNumber?: string;
}

export interface GetReissueableSKUsQtyResp {
	skuQty?: {[key: string]: string};
}

export interface IsSKUAftersaleOrderReq {
	item?: OmsOrderItemPair;
}

export interface IsSKUAftersaleOrderResp {
	ok?: boolean;
	type?: AftersaleOrderType;
}

export interface GetRefundableSKUsFeeReq {
	items?: OmsOrderItemPairWithQty[];
}

export interface SKUFeeItem {
	feeItems?: {[key: string]: string};
}

export interface GetRefundableSKUsFeeResp {
	skuFee?: {[key: string]: SKUFeeItem};
}

export interface IsSKUHasAftersaleOrderReq {
	item?: OmsOrderItemPair;
}

export interface IsSKUHasAftersaleOrderResp {
	ok?: boolean;
	afOrders?: AftersaleOrderID[];
}

export interface AftersaleOrderID {
	type?: AftersaleOrderType;
	number?: string;
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	item?: OmsOrderItemPair;
}

export interface GetReissueSKUMappingReq {
	item?: OmsOrderItemPair;
}

export interface GetReissueSKUMappingResp {
	items?: OmsOrderItemPair[];
}

export interface GetAftersaleOrderDetailReq {
	/**
	 * @pattern ^\d+$
	 */
	aftersaleOrderID?: string;
}

export interface GetAftersaleOrderDetailResp {
	aftersaleOrder?: AftersaleOrderInfo;
	siblingAftersaleOrders?: AftersaleOrderInfo[];
}

export interface CountAftersaleOrdersResp {
	statusMap?: {[key: string]: string};
}

export interface SearchAftersaleOrdersResp {
	info?: AftersaleOrderInfo[];
}

export interface AftersaleOrderSearchFilter {
	aftersaleOrderNumber?: string;
	originOrderNumber?: string;
	orderItem?: OmsOrderItemPair;
	customer?: CustomerInfo;
	/**
	 * @pattern ^\d+$
	 */
	createDateFrom?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDateEnd?: string;
	/**
	 * @pattern ^\d+$
	 */
	afterSaleOrderReasonID?: string;
	reIssueOrderItem?: OmsOrderItemPair;
	orderType?: AftersaleOrderType;
	status?: AftersaleOrderStatus;
	/**
	 * @pattern ^\d+$
	 */
	offset?: string;
	/**
	 * @pattern ^\d+$
	 */
	limit?: string;
	originPackageNumber?: string;
	register?: string;
	/**
	 * @pattern ^\d+$
	 */
	userGroupID?: string;
}

export interface CancelAftersaleOrdersReq {
	/**
	 * @pattern ^\d+$
	 */
	aftersaleOrderIDs?: string[];
}

export interface RejectAftersaleOrdersReq {
	/**
	 * @pattern ^\d+$
	 */
	aftersaleOrderIDs?: string[];
	reason?: string;
}

export interface ApproveAftersaleOrdersReq {
	/**
	 * @pattern ^\d+$
	 */
	aftersaleOrderIDs?: string[];
}

export interface SubmitAftersaleOrderReq {
	/**
	 * @pattern ^\d+$
	 */
	aftersaleOrderID?: string;
	order?: AftersaleOrderInfo;
}

export interface CreateAftersaleOrderReq {
	orders?: AftersaleOrderInfo[];
}

export interface CustomerInfo {
	customerName?: string;
	customerEmail?: string;
	customerPhoneNumber?: string;
}

export interface AftersaleOrderItemInfo {
	/**
	 * @pattern ^\d+$
	 */
	orderID?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderItemID?: string;
	orderNumber?: string;
	productName?: string;
	skuInfo?: string;
	skuImageURL?: string;
	/**
	 * @pattern ^\d+$
	 */
	aftersaleQty?: string;
	isNeedPurchase?: boolean;
	isEzSeller?: boolean;
	fee?: SKUFeeDetail;
	packageNumber?: string;
	shopName?: string;
	customer?: CustomerInfo;
	/**
	 * @pattern ^\d+$
	 */
	orderRegionID?: string;
	/**
	 * @pattern ^\d+$
	 */
	reissueOrderID?: string;
	/**
	 * @pattern ^\d+$
	 */
	reissueOrderItemID?: string;
}

export interface AftersaleOrderInfo {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	number?: string;
	status?: AftersaleOrderStatus;
	type?: AftersaleOrderType;
	reason?: string;
	/**
	 * @pattern ^\d+$
	 */
	reasonID?: string;
	remarkAttachment?: string[];
	remark?: string;
	logs?: AftersaleOrderActionLog[];
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	party?: RespParty;
	isSyncPurchase?: boolean;
	itemInfo?: AftersaleOrderItemInfo;
	completeBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	completeDate?: string;
	isSyncInspection?: boolean;
	prepaymentRemark?: string;
	/**
	 * @pattern ^\d+$
	 */
	serviceTypeId?: string;
	isCustomize?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	customCycle?: string;
	productUrl?: string;
}

export interface AftersaleOrderActionLog {
	/**
	 * @pattern ^\d+$
	 */
	actionDate?: string;
	content?: string;
	actionBy?: string;
}

export interface SKUFeeDetail {
	/**
	 * @pattern ^\d+$
	 */
	domesticShippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	shippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	handlingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	serviceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	insuranceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	gst?: string;
	/**
	 * @pattern ^\d+$
	 */
	manualFee?: string;
	isRefundPrimeShippingFee?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	totalProductPrice?: string;
	currencyCode?: string;
	isFullRefund?: boolean;
}

export interface ParcelItems {
	parcelCode?: string;
	orderItems?: OmsOrderItemPair[];
}

export interface ParcelOrderItemDetail {
	parcelCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderID?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderItemID?: string;
	type?: AftersaleOrderType;
	itemInfo?: CustomerOrderItemInfo[];
	isReissueAftersaleOrder?: boolean;
}

export interface CustomerOrderItemInfo {
	/**
	 * @pattern ^\d+$
	 */
	reissueOrderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	reissueOrderItemId?: string;
	aftersaleOrderType?: AftersaleOrderType;
	/**
	 * @pattern ^\d+$
	 */
	skuStatusId?: string;
	/**
	 * @pattern ^\d+$
	 */
	originOrderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	originOrderItemId?: string;
	aftersaleStatusID?: AftersaleOrderStatus;
}



export function CreateAftersaleOrder(payload: Partial<CreateAftersaleOrderReq>) {
	return webapi<CommonEmpty>("oms.Aftersale/CreateAftersaleOrder", payload);
}

export function SubmitAftersaleOrder(payload: Partial<SubmitAftersaleOrderReq>) {
	return webapi<CommonEmpty>("oms.Aftersale/SubmitAftersaleOrder", payload);
}

export function ApproveAftersaleOrders(payload: Partial<ApproveAftersaleOrdersReq>) {
	return webapi<CommonEmpty>("oms.Aftersale/ApproveAftersaleOrders", payload);
}

export function RejectAftersaleOrders(payload: Partial<RejectAftersaleOrdersReq>) {
	return webapi<CommonEmpty>("oms.Aftersale/RejectAftersaleOrders", payload);
}

export function CancelAftersaleOrders(payload: Partial<CancelAftersaleOrdersReq>) {
	return webapi<CommonEmpty>("oms.Aftersale/CancelAftersaleOrders", payload);
}

export function SearchAftersaleOrders(payload: Partial<AftersaleOrderSearchFilter>) {
	return webapi<SearchAftersaleOrdersResp>("oms.Aftersale/SearchAftersaleOrders", payload);
}

export function CountAftersaleOrders(payload: Partial<AftersaleOrderSearchFilter>) {
	return webapi<CountAftersaleOrdersResp>("oms.Aftersale/CountAftersaleOrders", payload);
}

export function GetAftersaleOrderDetail(payload: Partial<GetAftersaleOrderDetailReq>) {
	return webapi<GetAftersaleOrderDetailResp>("oms.Aftersale/GetAftersaleOrderDetail", payload);
}

export function GetReissueSKUMapping(payload: Partial<GetReissueSKUMappingReq>) {
	return webapi<GetReissueSKUMappingResp>("oms.Aftersale/GetReissueSKUMapping", payload);
}

export function IsSKUHasAftersaleOrder(payload: Partial<IsSKUHasAftersaleOrderReq>) {
	return webapi<IsSKUHasAftersaleOrderResp>("oms.Aftersale/IsSKUHasAftersaleOrder", payload);
}

export function IsSKUAftersaleOrder(payload: Partial<IsSKUAftersaleOrderReq>) {
	return webapi<IsSKUAftersaleOrderResp>("oms.Aftersale/IsSKUAftersaleOrder", payload);
}

export function GetRefundableSKUsFee(payload: Partial<GetRefundableSKUsFeeReq>) {
	return webapi<GetRefundableSKUsFeeResp>("oms.Aftersale/GetRefundableSKUsFee", payload);
}

export function GetReissueableSKUsQty(payload: Partial<GetReissueableSKUsQtyReq>) {
	return webapi<GetReissueableSKUsQtyResp>("oms.Aftersale/GetReissueableSKUsQty", payload);
}

export function IsPackageHasPendingAftersaleSKU(payload: Partial<IsPackageHasPendingAftersaleSKUReq>) {
	return webapi<IsPackageHasPendingAftersaleSKUResp>("oms.Aftersale/IsPackageHasPendingAftersaleSKU", payload);
}

export function GetAftersaleOrderByParcelCodes(payload: Partial<GetAftersaleOrderByParcelCodesReq>) {
	return webapi<GetAftersaleOrderByParcelCodesResp>("oms.Aftersale/GetAftersaleOrderByParcelCodes", payload);
}


export default {
	CreateAftersaleOrder,
	SubmitAftersaleOrder,
	ApproveAftersaleOrders,
	RejectAftersaleOrders,
	CancelAftersaleOrders,
	SearchAftersaleOrders,
	CountAftersaleOrders,
	GetAftersaleOrderDetail,
	GetReissueSKUMapping,
	IsSKUHasAftersaleOrder,
	IsSKUAftersaleOrder,
	GetRefundableSKUsFee,
	GetReissueableSKUsQty,
	IsPackageHasPendingAftersaleSKU,
	GetAftersaleOrderByParcelCodes,
};