/**
 * This file is auto-generated by tgen
 * Don't change manually
 */
import webapi from "./webapi";




export interface TOffset {
	id: number;
	balanceType: string;
	localTotal: number;
	note: string;
	createDate: string;
	canCancel: boolean;
}
export interface TPrimeOrder {
	paymentBill: TPrimePaymentBill;
	shipments: TPrimeShipment[];
}
export interface TPrimeOrderDetail {
	id: number;
	orderNumber: string;
	productImage: string;
	productName: string;
	gstFee?: boolean;
	insured: boolean;
	qty: number;
	sellerDiscount?: string;
	packageId: number;
	unitPrice: string;
	sku: string;
	remark: string;
	productUrl: string;
	orderRemarks: TPrimeOrderRemark[];
	isRejected: boolean;
	offsets: TOffset[];
	originCode: string;
	domesticShippingFee: string;
}
export interface TPrimeOrderRemark {
	id: number;
	remark: string;
	needReply: boolean;
	attachments?: string;
	createDate: string;
	creator: string;
	offsetId?: number;
	remarktype: number;
}
export interface TPrimePaymentBill {
	id: number;
	paymentNumber: string;
	total: string;
	chargeWeight: string;
	packageWeight: string;
	paymentBillDetails: TPrimePaymentBillCategory[];
	paymentStatus: string;
	createDate: string;
	paymentType: string;
}
export interface TPrimePaymentBillCategory {
	billCategoryCode: string;
	billCategoryName: string;
	altBillCategoryName: string;
	total: string;
}
export interface TPrimeShipment {
	shipmentId: number;
	localDeliveryMethod: string;
	stationName: string;
	periodName: string;
	localDeliveryDate: string;
	shipToAddress: string;
	shipToName: string;
	shipToPhone: string;
	shipToZip: string;
	shipToCity: string;
	shipToState: string;
	regionName: string;
	regionId: string;
	mrtStationItemId: string;
	neighbourhoodStationItemId: string;
	selfStationId: number;
	total: number;
	dayOfWeek: string;
	isEzShipping: boolean;
	canBeEdited: boolean;
	paymentNumber: string;
	status: string;
	tOrder: TPrimeOrderDetail[];
	packageNumbers: string[];
	shipmentDetailItems: TTitleValueItem[];
	eta: string;
	statusDisplayText: string;
	packageIds: number[];
	pickupPeriodId: number;
	canEdit: boolean;
	canCancel: boolean;
}
export interface TTitleValueItem {
	title: string;
	value: string;
}


export function UserGetCountOfPrimePendingReplyOrders(): Promise<number> {
	return webapi<number>("PrimeOrder.UserGetCountOfPrimePendingReplyOrders", {  });
}

export function UserGetPrimeOrderCount(): Promise<number> {
	return webapi<number>("PrimeOrder.UserGetPrimeOrderCount", {  });
}

export function UserGetPrimeOrderDetail(primeOrderId: number): Promise<TPrimeOrder> {
	return webapi<TPrimeOrder>("PrimeOrder.UserGetPrimeOrderDetail", { primeOrderId });
}

export function UserGetPrimeOrderList(offset: number, limit: number): Promise<TPrimeOrder[]> {
	return webapi<TPrimeOrder[]>("PrimeOrder.UserGetPrimeOrderList", { offset, limit });
}

export function UserGetPrimePendingReplyOrders(offset: number, limit: number): Promise<TPrimeOrderDetail[]> {
	return webapi<TPrimeOrderDetail[]>("PrimeOrder.UserGetPrimePendingReplyOrders", { offset, limit });
}



export default {
	UserGetCountOfPrimePendingReplyOrders,
	UserGetPrimeOrderCount,
	UserGetPrimeOrderDetail,
	UserGetPrimeOrderList,
	UserGetPrimePendingReplyOrders,
};

