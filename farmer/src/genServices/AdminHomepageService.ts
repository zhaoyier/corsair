/**
 * This file is auto-generated by tgen
 * Don't change manually
 */
import webapi from "./webapi";
import * as WebHomepage from "./WebHomepageService";




export interface TAdminHomepageBanner {
	name: string;
	bannerType: number;
	picture: string;
	linkAddress?: string;
	visible: boolean;
	startAt: number;
	endAt: number;
}
export interface TAdminHomepageBannerList {
	id: string;
	banners: TAdminHomepageBanner[];
	removed: boolean;
	countryCode: string;
}
export interface TAdminHomepageBestSellerProducts {
	id: string;
	originCode: string;
	products: WebHomepage.TWebHomepageProduct[];
	removed: boolean;
}
export interface TAdminHomepageCategoryCollections {
	id: string;
	collections: WebHomepage.TWebHomepageCategoryCollection[];
	removed: boolean;
}
export interface TAdminHomepagePromotionProducts {
	id: string;
	topCategoryId: number;
	promotionBanner: WebHomepage.TWebHomepageCampaign;
	products: WebHomepage.TWebHomepageProduct[];
	removed: boolean;
}
export interface TAdminNewHomepageBanner {
	name: string;
	bannerType: number;
	picture: string;
	linkAddress: string;
	startAt: number;
	endAt: number;
	countryCode: string;
	id: string;
	activityId: number;
}
export interface TAdminUploadInfo {
	token: string;
	baseUrl: string;
	uploadUrl: string;
}


export function AddBannerList(countryCode: string, banners: TAdminHomepageBanner[]): Promise<null> {
	return webapi<null>("AdminHomepage.AddBannerList", { countryCode, banners });
}

export function AddBestSellerProducts(originCode: string, products: WebHomepage.TWebHomepageProduct[]): Promise<null> {
	return webapi<null>("AdminHomepage.AddBestSellerProducts", { originCode, products });
}

export function AddCategoryCollections(collections: WebHomepage.TWebHomepageCategoryCollection[]): Promise<null> {
	return webapi<null>("AdminHomepage.AddCategoryCollections", { collections });
}

export function AddNewHomeBanner(banner: TAdminNewHomepageBanner): Promise<string> {
	return webapi<string>("AdminHomepage.AddNewHomeBanner", { banner });
}

export function AddPromotionProducts(topCategoryId: number, promotionBanner: WebHomepage.TWebHomepageCampaign, products: WebHomepage.TWebHomepageProduct[]): Promise<null> {
	return webapi<null>("AdminHomepage.AddPromotionProducts", { topCategoryId, promotionBanner, products });
}

export function DeleteBannerList(id: string): Promise<null> {
	return webapi<null>("AdminHomepage.DeleteBannerList", { id });
}

export function DeleteBestSellerProducts(id: string): Promise<null> {
	return webapi<null>("AdminHomepage.DeleteBestSellerProducts", { id });
}

export function DeleteCategoryCollections(id: string): Promise<null> {
	return webapi<null>("AdminHomepage.DeleteCategoryCollections", { id });
}

export function DeleteNewHomeBanner(id: string): Promise<boolean> {
	return webapi<boolean>("AdminHomepage.DeleteNewHomeBanner", { id });
}

export function DeletePromotionProducts(id: string): Promise<null> {
	return webapi<null>("AdminHomepage.DeletePromotionProducts", { id });
}

export function GetBannerListHistory(countryCode: string): Promise<TAdminHomepageBannerList[]> {
	return webapi<TAdminHomepageBannerList[]>("AdminHomepage.GetBannerListHistory", { countryCode });
}

export function GetBestSellerProductsHistory(originCode: string): Promise<TAdminHomepageBestSellerProducts[]> {
	return webapi<TAdminHomepageBestSellerProducts[]>("AdminHomepage.GetBestSellerProductsHistory", { originCode });
}

export function GetCategoryCollectionsHistory(): Promise<TAdminHomepageCategoryCollections[]> {
	return webapi<TAdminHomepageCategoryCollections[]>("AdminHomepage.GetCategoryCollectionsHistory", {});
}

export function GetNewHomeBannerList(countryCode: string, bannerType: number, offset: number, limit: number): Promise<TAdminNewHomepageBanner[]> {
	return webapi<TAdminNewHomepageBanner[]>("AdminHomepage.GetNewHomeBannerList", { countryCode, bannerType, offset, limit });
}

export function GetPromotionProductsHistory(topCategoryId: number): Promise<TAdminHomepagePromotionProducts[]> {
	return webapi<TAdminHomepagePromotionProducts[]>("AdminHomepage.GetPromotionProductsHistory", { topCategoryId });
}

export function GetReplaceUploadInfo(catalog: string, key: string): Promise<TAdminUploadInfo> {
	return webapi<TAdminUploadInfo>("AdminHomepage.GetReplaceUploadInfo", { catalog, key });
}

export function GetUploadInfo(catalog: string): Promise<TAdminUploadInfo> {
	return webapi<TAdminUploadInfo>("AdminHomepage.GetUploadInfo", { catalog });
}

export function Refetch(catalog: string, key: string): Promise<boolean> {
	return webapi<boolean>("AdminHomepage.Refetch", { catalog, key });
}

export function UpdateNewHomeBanner(banner: TAdminNewHomepageBanner): Promise<boolean> {
	return webapi<boolean>("AdminHomepage.UpdateNewHomeBanner", { banner });
}



export default {
	AddBannerList,
	AddBestSellerProducts,
	AddCategoryCollections,
	AddNewHomeBanner,
	AddPromotionProducts,
	DeleteBannerList,
	DeleteBestSellerProducts,
	DeleteCategoryCollections,
	DeleteNewHomeBanner,
	DeletePromotionProducts,
	GetBannerListHistory,
	GetBestSellerProductsHistory,
	GetCategoryCollectionsHistory,
	GetNewHomeBannerList,
	GetPromotionProductsHistory,
	GetReplaceUploadInfo,
	GetUploadInfo,
	Refetch,
	UpdateNewHomeBanner,
};

