/**
 * This file is auto-generated by protobufgen
 * Don't change manually
 */

import { ResultResp as AppcommonResultResp } from "../appcommon/common_public";
import { DelayNoticeTemplate as EzShipOMSDelayNoticeTemplate, WarehouseType as EzShipOMSWarehouseType, RemarkTypeEnum as EzShipOMSRemarkTypeEnum, Result as EzShipOMSResult, DeclaredItemInfo as EzShipOMSDeclaredItemInfo, DeliveryMethod as EzShipOMSDeliveryMethod, OrderOriginEnum as EzShipOMSOrderOriginEnum, HscodeModel as EzShipOMSHscodeModel, ParcelStatusListResp as EzShipOMSParcelStatusListResp, DeliveryMethodListResp as EzShipOMSDeliveryMethodListResp, WarehouseListReq as EzShipOMSWarehouseListReq, WarehouseListResp as EzShipOMSWarehouseListResp, OrderStatusListResp as EzShipOMSOrderStatusListResp, DesCountryCodeListResp as EzShipOMSDesCountryCodeListResp, CnHscodeResp as EzShipOMSCnHscodeResp, ShippingMethodListResp as EzShipOMSShippingMethodListResp, LogisticsListReq as EzShipOMSLogisticsListReq, LogisticsListResp as EzShipOMSLogisticsListResp, LogisticByNameReq as EzShipOMSLogisticByNameReq, LogisticByNameResp as EzShipOMSLogisticByNameResp, SubmitOrder2MQ as EzShipOMSSubmitOrder2MQ } from "../ezShipOMS/public";
import { Empty as CommonEmpty } from "../common/empty";
import { LoginReq as EzShipOMSLoginReq, LoginRsp as EzShipOMSLoginRsp } from "../ezShipOMS/auth";
import webapi from "../webapi";

export enum DeliveryOper {
	DeliveryOper_Invalid = "DeliveryOper_Invalid",
	DeliveryOper_ArrangeDelivery = "DeliveryOper_ArrangeDelivery",
	DeliveryOper_EditDelivery = "DeliveryOper_EditDelivery",
	DeliveryOper_CancelDelivery = "DeliveryOper_CancelDelivery",
	DeliveryOper_ConfirmDelivery = "DeliveryOper_ConfirmDelivery",
}


export enum OrderRegTypeEnum {
	OrderRegTypeEnumUnknown = "OrderRegTypeEnumUnknown",
	OrderRegTypeEnumNickName = "OrderRegTypeEnumNickName",
	OrderRegTypeEnumUserId = "OrderRegTypeEnumUserId",
	OrderRegTypeEnumRegCode = "OrderRegTypeEnumRegCode",
}


export enum SubmitNewOrderRespCode {
	Success = "Success",
	ExistSameUser = "ExistSameUser",
}


export enum OrderStatusCode {
	Invalid_Code = "Invalid_Code",
	Cancelled_Code = "Cancelled_Code",
	ShipToWarehouse_Code = "ShipToWarehouse_Code",
	SignedByWarehouse = "SignedByWarehouse",
	ReadyToShip_Code = "ReadyToShip_Code",
	AwaitingPayment = "AwaitingPayment",
	ProcessingShipment_Code = "ProcessingShipment_Code",
	PreparingToShip_Code = "PreparingToShip_Code",
	ShippingToDestination_Code = "ShippingToDestination_Code",
	ArrivedInSG_Code = "ArrivedInSG_Code",
	PendingForDelivery_Code = "PendingForDelivery_Code",
	ReadyForDelivery_Code = "ReadyForDelivery_Code",
	OutForDelivery_Code = "OutForDelivery_Code",
	Delivered_Code = "Delivered_Code",
	ReadyForCollection_Code = "ReadyForCollection_Code",
	Complete_Code = "Complete_Code",
}


export enum ParcelStatusCode {
	Invalid = "Invalid",
	Cancelled = "Cancelled",
	ShippingToDestination = "ShippingToDestination",
	AwattingOtherParcels = "AwattingOtherParcels",
	ArrivedInSG = "ArrivedInSG",
	PendingForDelivery = "PendingForDelivery",
	ReadyForDelivery = "ReadyForDelivery",
	OutForDelivery = "OutForDelivery",
	Delivered = "Delivered",
	ReadyForCollection = "ReadyForCollection",
	Complete = "Complete",
}


export enum AftersaleTypeEnum {
	Invalid_Type = "Invalid_Type",
	Reissue_Type = "Reissue_Type",
}


export enum AddedServiceStatusEnum {
	Unknown_Status = "Unknown_Status",
	Pending_Status = "Pending_Status",
	Processing_Status = "Processing_Status",
	Completed_Status = "Completed_Status",
	CANCEL_Status = "CANCEL_Status",
}


export enum AddServiceType {
	Service_invalid = "Service_invalid",
	Service_PHOTOGRAPH = "Service_PHOTOGRAPH",
	Service_REPACKAGE = "Service_REPACKAGE",
}


export enum CancelOrderEnum {
	UNKNOWN_CANCEL = "UNKNOWN_CANCEL",
	CANCEL_ORDER_1 = "CANCEL_ORDER_1",
	CANCEL_ORDER_2 = "CANCEL_ORDER_2",
}


export enum UserPlatform {
	UserPlatformUnknown = "UserPlatformUnknown",
	UserPlatformOrder = "UserPlatformOrder",
	UserPlatformOms = "UserPlatformOms",
}


export enum OMSRemarkType {
	OMSRemarkTypeUnkown = "OMSRemarkTypeUnkown",
	OMSRemarkTypePackage = "OMSRemarkTypePackage",
	OMSRemarkTypeDelivery = "OMSRemarkTypeDelivery",
	OMSRemarkTypeNone = "OMSRemarkTypeNone",
}


export enum PackageStatus {
	PackageStatusUnknown = "PackageStatusUnknown",
}


export enum PackageWarehouseType {
	PackageWarehouseTypeUnkown = "PackageWarehouseTypeUnkown",
}


export enum SearchPackageState {
	SearchPackageStateUnkown = "SearchPackageStateUnkown",
	SearchPackageStateEtaExpired = "SearchPackageStateEtaExpired",
}


export enum PackageLogType {
	PackageLogTypeUnknown = "PackageLogTypeUnknown",
	ParcelStatusFlow = "ParcelStatusFlow",
	UpdateDelivery = "UpdateDelivery",
	SplitDelivery = "SplitDelivery",
	CancelDelivery = "CancelDelivery",
	DelayNotication = "DelayNotication",
	PackageAftersale = "PackageAftersale",
	CancelDeliveryOrder = "CancelDeliveryOrder",
}


export enum IsRemarkType {
	IsRemarkTypeUnkown = "IsRemarkTypeUnkown",
	IsRemarkTypeYes = "IsRemarkTypeYes",
	IsRemarkTypeNo = "IsRemarkTypeNo",
}


export enum OmsToOrderSyncType {
	OmsToOrderSyncTypeUnknow = "OmsToOrderSyncTypeUnknow",
	OmsToOrderSyncTypePkg = "OmsToOrderSyncTypePkg",
	OmsToOrderSyncTypePkgSplit = "OmsToOrderSyncTypePkgSplit",
	OmsToOrderSyncTypeShipment = "OmsToOrderSyncTypeShipment",
}


export enum BatchOperationType {
	BatchOperationTypeInvalid = "BatchOperationTypeInvalid",
	BatchCreateAddedService = "BatchCreateAddedService",
	BatchCancellOrder = "BatchCancellOrder",
}


export enum SiteType {
	SiteTypeEzbuy = "SiteTypeEzbuy",
	SiteTypeGlobal = "SiteTypeGlobal",
}


export enum DateGap {
	DateGapNone = "DateGapNone",
	DateGapLatestThreeMonth = "DateGapLatestThreeMonth",
	DateGapBeforeThreeMonth = "DateGapBeforeThreeMonth",
}



export interface GetDelayNoticeReq {
	parcelCode?: string;
}

export interface GetDelayNoticeResp {
	info?: DelayNoticeInfo[];
}

export interface DelayNoticeInfo {
	notice?: string;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
}

export interface CreateDelayNoticeReq {
	parcelCodes?: string[];
	notice?: string;
	mailNotice?: string;
}

export interface CreateDelayNoticeResp {
	result?: AppcommonResultResp;
}

export interface GetDelayNoticeTemplateResp {
	noticeTemplate?: EzShipOMSDelayNoticeTemplate[];
	mailNoticeTemplate?: EzShipOMSDelayNoticeTemplate[];
}

export interface EditDeliveryInfoReq {
	option?: DeliveryOper;
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	recipient?: string;
	phone?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	timeSlotId?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryStationId?: string;
	/**
	 * @pattern ^\d+$
	 */
	homeAddressId?: string;
	timeSlotName?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderIds?: string[];
}

export interface DeclaredAmountReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface DeclaredAmountItem {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderItemId?: string;
	/**
	 * @pattern ^\d+$
	 */
	qty?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	currencyCode?: string;
	fstCategoryName?: string;
	secCategoryName?: string;
}

export interface DeclaredAmountResp {
	items?: DeclaredAmountItem[];
}

export interface AddedServiceTermReq {
	warehouse?: EzShipOMSWarehouseType;
}

export interface AddedServiceTermResp {
	serviceType?: AddServiceType[];
}

export interface RpcUpdateOrderStatusReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	statusId?: string;
}

export interface SubmitNewOrderReq {
	pickupKey?: string;
	orderRegType?: OrderRegTypeEnum;
	logisticsNumber?: string;
	logisticsName?: string;
	warehouse?: string;
	catalog?: string;
	isNeedPhotos?: boolean;
	isREPack?: boolean;
	price?: string;
	remark?: string;
	items?: OrderItemInfo[];
	/**
	 * @pattern ^\d+$
	 */
	declared_amount?: string;
	isFromOrder?: boolean;
	fromOrderInfo?: FromOrderInfo;
	isFirstTime?: boolean;
	site?: SiteType;
}

export interface FromOrderInfo {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	orderNumber?: string;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	notificationEmail?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	customerId?: number;
}

export interface SubmitNewOrderResp {
	msg?: string;
	orderNumber?: string;
	code?: SubmitNewOrderRespCode;
}

export interface OrderDetailReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface OrderInfo {
	nickName?: string;
	mail?: string;
	orderNo?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderDate?: string;
	logisticsName?: string;
	logisticsNo?: string;
	warehouseName?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryDate?: string;
	addedService?: boolean;
	shipmentType?: string;
	shipmentRemark?: string;
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	volume?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargeableWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderStatus?: string;
	orderStatusDesc?: string;
	item?: OrderItemInfo[];
	availableShipmentType?: string;
	isDefect?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	storeDays?: string;
	/**
	 * @pattern ^\d+$
	 */
	length?: string;
	/**
	 * @pattern ^\d+$
	 */
	width?: string;
	/**
	 * @pattern ^\d+$
	 */
	height?: string;
}

export interface OrderItemInfo {
	/**
	 * @pattern ^\d+$
	 */
	itemId?: string;
	/**
	 * @pattern ^\d+$
	 */
	qty?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredAmount?: string;
	itemName?: string;
	/**
	 * @pattern ^\d+$
	 */
	categoryId?: string;
	fstCategoryName?: string;
	secCategoryName?: string;
}

export interface PackageInfo {
	packageCode?: string;
	eta?: string;
	/**
	 * @pattern ^\d+$
	 */
	packageStatus?: string;
	pickingTime?: string;
	signingTime?: string;
}

export interface DeliveryInfo {
	deliveryMethod?: string;
	/**
	 * @pattern ^\d+$
	 */
	stationType?: string;
	name?: string;
	phone?: string;
	address?: string;
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	packages?: PackageInfo[];
	addressDetail?: string;
	city?: string;
	state?: string;
	zipcode?: string;
}

export interface Remark {
	remarkType?: EzShipOMSRemarkTypeEnum;
	remarkContent?: string;
	enclosureLink?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	createBy?: string;
}

export interface AllRemarks {
	frontRemarks?: Remark[];
	backgroundRemarks?: Remark[];
}

export interface OrderDetailResp {
	order?: OrderInfo;
	delivery?: DeliveryInfo;
	remarks?: AllRemarks;
}

export interface CreateAddedServiceReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	serviceType?: AddServiceType[];
	createBy?: string;
	remark?: string;
}

export interface GetAddedServiceReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface AddedService {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	serviceType?: AddServiceType;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	remark?: string;
	/**
	 * @pattern ^\d+$
	 */
	serviceFee?: string;
	status?: AddedServiceStatusEnum;
	enclosureLink?: string[];
}

export interface CancelAddedServiceReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	serviceId?: string;
}

export interface AddedServicesResp {
	addedServicList?: AddedService[];
}

export interface LogisticsReq {
	pacakgeCode?: string;
}

export interface LogisticsTrack {
	/**
	 * @pattern ^\d+$
	 */
	trackDate?: string;
	track?: string;
}

export interface LogisticsResp {
	trackList?: LogisticsTrack[];
}

export interface PayInfoReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface OrderFee {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	orderNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	internationalShippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	gst?: string;
	/**
	 * @pattern ^\d+$
	 */
	localDeliveryFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	insuranceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	shippingDiscount?: string;
	/**
	 * @pattern ^\d+$
	 */
	couponDiscount?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	photoServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	repackageServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	storageFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	currencyCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargeableWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	volumeWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	internationalShippingFeeActual?: string;
}

export interface DiscountInfo {
	orderNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	discountType?: string;
	/**
	 * @pattern ^\d+$
	 */
	discountAmount?: string;
	discountName?: string;
}

export interface PayInfoResp {
	currencyCode?: string;
	billNo?: string;
	billType?: string;
	/**
	 * @pattern ^\d+$
	 */
	payDate?: string;
	fees?: OrderFee[];
	discounts?: DiscountInfo[];
	/**
	 * @pattern ^\d+$
	 */
	confirmPayDate?: string;
	payWay?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalChargeWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalShippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalDiscountFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalStorageFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalDeclaredValue?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalGst?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalActualPaymentFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalInternationalShippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalLocalDeliveryFee?: string;
}

export interface OrderLogReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface LogInfo {
	logContent?: string;
	/**
	 * @pattern ^\d+$
	 */
	logDate?: string;
	operator?: string;
}

export interface OrderLogResp {
	Logs?: LogInfo[];
}

export interface RefundsRequire {
	isRefunds?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	warehouseId?: string;
	catalog?: string;
	name?: string;
	address?: string;
	phone?: string;
}

export interface CancelOrderReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	cancelType?: CancelOrderEnum;
	platformId?: UserPlatform;
	refunds?: RefundsRequire;
	updateBy?: string;
}

export interface CancelOrderResp {
	result?: EzShipOMSResult;
}

export interface ModifyDeclaredReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredAmount?: string;
	itemInfos?: EzShipOMSDeclaredItemInfo[];
}

export interface AddRemark {
	remarkType?: EzShipOMSRemarkTypeEnum;
	content?: string;
	enclosureLink?: string[];
	isReply?: boolean;
}

export interface AddRemarkReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	remarks?: AddRemark;
}

export interface SearchOrderReq {
	packageCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	catalog?: string;
	nickName?: string;
	email?: string;
	phone?: string;
	transportNumber?: string;
	shipmentType?: string;
	deliveryMethod?: EzShipOMSDeliveryMethod;
	/**
	 * @pattern ^\d+$
	 */
	offset?: string;
	/**
	 * @pattern ^\d+$
	 */
	limit?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDateStart?: string;
	/**
	 * @pattern ^\d+$
	 */
	payDateStart?: string;
	logisticsName?: string;
	warehouseType?: EzShipOMSWarehouseType;
	/**
	 * @pattern ^\d+$
	 */
	billId?: string;
	invoiceNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderStatus?: string;
	orderNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDateEnd?: string;
	/**
	 * @pattern ^\d+$
	 */
	payDateEnd?: string;
	customerId?: string;
	selfHelpCode?: string;
	orderOrigin?: EzShipOMSOrderOriginEnum;
	dateGap?: DateGap;
}

export interface sampleOrderInfo {
	packageCode?: string;
	warehouseId?: string;
	shipmentType?: string;
	deliveryMethod?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargWeight?: string;
	orderStatus?: string;
	transportNumber?: string;
	orderNumber?: string;
	nickName?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredAmount?: string;
	hasRemark?: boolean;
	isAfterSales?: boolean;
	hasAdditionalServices?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	isDefect?: boolean;
	/**
	 * @pattern ^\d+$
	 */
	customerId?: string;
	catalogCode?: string;
	orderOrigin?: OrderOrigin;
	selfHelpCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	volumeWeight?: string;
}

export interface CancelDeliveryParcelReq {
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	parcelCodes?: string[];
}

export interface CancelDeliveryParcelResp {
	result?: EzShipOMSResult;
	parcelCodes?: string[];
	/**
	 * @pattern ^\d+$
	 */
	deliveryNumber?: string;
}

export interface SplitShipmentParcelReq {
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	parcelCodes?: string[];
}

export interface SplitShipmentParcelResp {
	result?: EzShipOMSResult;
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	parcelCodes?: string[];
}

export interface SearchOrderResp {
	items?: sampleOrderInfo[];
	/**
	 * @pattern ^\d+$
	 */
	total?: string;
}

export interface PackageRemarkReq {
	packageCode?: string[];
}

export interface PackageRemarkResp {
	result?: EzShipOMSResult;
	remarks?: OMSRemark[];
}

export interface OMSRemark {
	remark?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
	type?: OMSRemarkType;
}

export interface AddPackageRemarkReq {
	packageCode?: string[];
	remark?: string;
}

export interface AddPackageRemarkResp {
	result?: EzShipOMSResult;
}

export interface DeliveryPackageReq {
	deliverys?: DeliveryRemark[];
}

export interface DeliveryPackageResp {
	result?: EzShipOMSResult;
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string[];
	packageCode?: string[];
	remarks?: OMSRemark[];
}

export interface DeliveryRemark {
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string;
	packageCode?: string;
}

export interface AddDeliveryRemarkReq {
	deliverys?: DeliveryRemark[];
	remark?: string;
}

export interface AddDeliveryRemarkResp {
	result?: EzShipOMSResult;
	items?: EzShipOMSResult[];
}

export interface GetDeliveryRemarkReq {
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string;
	packageCode?: string[];
}

export interface GetDeliveryRemarkResp {
	result?: EzShipOMSResult;
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string;
	packageCode?: string[];
	remarks?: OMSRemark[];
}

export interface SearchPackageReq {
	packageCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string;
	packageStatue?: string;
	orderId?: string;
	catalog?: string;
	boxNumber?: string;
	nickname?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliverDate?: string;
	phone?: string;
	deliveryCode?: string;
	transportNumber?: string;
	warehouseId?: string;
	shipmentType?: string;
	deliveryType?: string;
	isRemark?: OMSRemarkType;
	cabinetNumber?: string;
	pickupPeriod?: string;
	etaDate?: string;
	searchState?: SearchPackageState;
	/**
	 * @pattern ^\d+$
	 */
	offset?: string;
	/**
	 * @pattern ^\d+$
	 */
	max?: string;
	origin?: EzShipOMSOrderOriginEnum;
	/**
	 * @pattern ^\d+$
	 */
	billId?: string;
	dateGap?: DateGap;
}

export interface PackageDetail {
	packageCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string;
	warehouse?: string;
	transport?: string;
	deliveryType?: string;
	deliveryAddress?: string;
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargWeight?: string;
	etaDate?: string;
	status?: string;
	isAftersale?: boolean;
	isInsurance?: boolean;
	isLocked?: boolean;
	nickname?: string;
	regionCode?: string;
	isRedelivered?: boolean;
	packageOrigin?: OrderOrigin;
}

export interface SearchPackageResp {
	result?: EzShipOMSResult;
	items?: PackageDetail[];
	/**
	 * @pattern ^\d+$
	 */
	total?: string;
}

export interface PackageDetailReq {
	packageCode?: string;
}

export interface PackageDelivery {
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string;
	deliveryAddress?: string;
	userName?: string;
	userPhone?: string;
	deliveryData?: string;
	deliveryType?: string;
}

export interface ShipmentInfo {
	transportName?: string;
	transportNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	outgoingDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	toDestDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	pickupPerioId?: string;
	pickupPeriod?: string;
	/**
	 * @pattern ^\d+$
	 */
	pickupTime?: string;
	/**
	 * @pattern ^\d+$
	 */
	signDate?: string;
	signUrl?: string;
	dispatchEta?: string;
	deliveryMethod?: string;
}

export interface SkuInfo {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	orderNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderItemId?: string;
	itemType?: string;
	/**
	 * @pattern ^\d+$
	 */
	qty?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
}

export interface PackageDetailResp {
	result?: EzShipOMSResult;
	packageCode?: string;
	logisticsNumber?: string;
	boxNumber?: string;
	warehouse?: string;
	packageType?: string;
	transport?: string;
	/**
	 * @pattern ^\d+$
	 */
	actualWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	volumeWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	chargWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	length?: string;
	/**
	 * @pattern ^\d+$
	 */
	width?: string;
	/**
	 * @pattern ^\d+$
	 */
	height?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	deliveryInfo?: PackageDelivery;
	shipmentInfo?: ShipmentInfo;
	isAftersales?: boolean;
	packageStatus?: string;
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	cabinetNumber?: string;
	regionCode?: string;
	items?: SkuInfo[];
	parcelFee?: ParcelFee;
	packageOrigin?: OrderOrigin;
}

export interface ParcelFee {
	orderFees?: OrderFee[];
	/**
	 * @pattern ^\d+$
	 */
	totalFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalChargeWeight?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalInternationalShippingFeeActual?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalLocalDeliveryFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalStorageFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalPhotoServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalRepackageServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalGst?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalInsuranceFee?: string;
}

export interface AddPackageLogReq {
	packageCode?: string;
	remark?: string;
	packageLogType?: PackageLogType;
}

export interface AddPackageLogResp {
	result?: EzShipOMSResult;
}

export interface PackageLogReq {
	packageCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	offset?: string;
	/**
	 * @pattern ^\d+$
	 */
	max?: string;
}

export interface PackageLogInfo {
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	context?: string;
	opName?: string;
}

export interface PackageLogResp {
	result?: EzShipOMSResult;
	/**
	 * @pattern ^\d+$
	 */
	total?: string;
	items?: PackageLogInfo[];
}

export interface PackageTrailReq {
	packageCode?: string;
}

export interface PackageTrailInfo {
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	context?: string;
}

export interface PackageTrailResp {
	items?: PackageTrailInfo[];
}

export interface PackageFaceInfoReq {
	packageCode?: string;
}

export interface PackageFaceInfoResp {
	packageCode?: string;
	nickname?: string;
	deliveryCode?: string;
	deliveryMethod?: EzShipOMSDeliveryMethod;
	region?: string;
}

export interface DeliveryDetailReq {
	/**
	 * @pattern ^\d+$
	 */
	deliveryId?: string;
}

export interface DeliveryPackage {
	packageNum?: string;
	deliverEta?: string;
	transportCode?: string;
	transport?: string;
	/**
	 * @pattern ^\d+$
	 */
	packageStatus?: string;
	packageStatusName?: string;
	/**
	 * @pattern ^\d+$
	 */
	warehouseId?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	warehouse?: string;
	/**
	 * @pattern ^\d+$
	 */
	packageWeight?: string;
}

export interface DeliveryOrder {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	orderNum?: string;
	orderStatus?: string;
	/**
	 * @minimum 0
	 * @TJS-type integer
	 */
	quantity?: number;
	/**
	 * @pattern ^\d+$
	 */
	warehouseId?: string;
	warehouse?: string;
}

export interface DeliveryDetailResp {
	result?: EzShipOMSResult;
	packages?: DeliveryPackage[];
	orders?: DeliveryOrder[];
}

export interface SubmitOmsNotifyMQ {
	billInfo?: OrderBill;
	shipmentInfo?: SubmitShipmentInfo;
	orders?: SubmitOrderInfo[];
	/**
	 * @pattern ^\d+$
	 */
	msgID?: string;
}

export interface OrderBill {
	/**
	 * @pattern ^\d+$
	 */
	billId?: string;
	/**
	 * @pattern ^\d+$
	 */
	userId?: string;
	payPlatform?: string;
	billNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	billTypeId?: string;
	/**
	 * @pattern ^\d+$
	 */
	statusId?: string;
	/**
	 * @pattern ^\d+$
	 */
	payDate?: string;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface SubmitOrderInfo {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredAmount?: string;
	/**
	 * @pattern ^\d+$
	 */
	TransportId?: string;
	TransportTmsCode?: string;
	TransportCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	statusId?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
	orderFee?: SubmitOrderFee;
	item?: SubmitOrderItemInfo[];
	discounts?: OrderDiscount[];
	/**
	 * @pattern ^\d+$
	 */
	chargeableWeight?: string;
	site?: SiteType;
	/**
	 * @pattern ^\d+$
	 */
	regionId?: string;
}

export interface OrderDiscount {
	/**
	 * @pattern ^\d+$
	 */
	discountId?: string;
	discountType?: string;
	/**
	 * @pattern ^\d+$
	 */
	discountAmount?: string;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
}

export interface SubmitOrderFee {
	/**
	 * @pattern ^\d+$
	 */
	internationalShippingFee?: string;
	currencyCode?: string;
	/**
	 * @minimum 0
	 */
	currencyExchange?: number;
	/**
	 * @pattern ^\d+$
	 */
	gst?: string;
	/**
	 * @pattern ^\d+$
	 */
	localDeliveryFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	storageFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	insuranceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	photoServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	repackageServiceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	shippingDiscount?: string;
	/**
	 * @pattern ^\d+$
	 */
	couponDiscount?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalFee?: string;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
	/**
	 * @minimum 0
	 */
	hkdCurrencyExchange?: number;
}

export interface SubmitOrderItemInfo {
	/**
	 * @pattern ^\d+$
	 */
	itemId?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredAmount?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
}

export interface SubmitShipmentInfo {
	/**
	 * @pattern ^\d+$
	 */
	shipmentId?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryTypeId?: string;
	/**
	 * @pattern ^\d+$
	 */
	deliveryStationId?: string;
	/**
	 * @pattern ^\d+$
	 */
	pickupPeriodId?: string;
	/**
	 * @pattern ^\d+$
	 */
	stationTypeId?: string;
	stationName?: string;
	stationTypeCode?: string;
	shipToZip?: string;
	shipToName?: string;
	shipToPhone?: string;
	shipToAddress?: string;
	shipToCity?: string;
	shipToState?: string;
	block?: string;
	street?: string;
	buildingName?: string;
	destCode?: string;
	company?: string;
	subDistrict?: string;
	district?: string;
	periodName?: string;
	/**
	 * @pattern ^\d+$
	 */
	CustomerAddressId?: string;
	ShipToAddress1?: string;
	ShipToAddress2?: string;
	Floor?: string;
	Unit?: string;
	LocalDeliveryMethod?: string;
	/**
	 * @pattern ^\d+$
	 */
	PlatformId?: string;
	createBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	updateBy?: string;
	/**
	 * @pattern ^\d+$
	 */
	updateDate?: string;
}

export interface OmsToOrderPackageInfoSyncMQ {
	mqType?: OmsToOrderSyncType;
	jsonContext?: string;
	/**
	 * @pattern ^\d+$
	 */
	msgID?: string;
}

export interface OrderLogCreateReq {
	/**
	 * @pattern ^\d+$
	 */
	logDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	operatorId?: string;
	operatorName?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderStatusId?: string;
	content?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface OrderLogSearchReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	pagination?: Pagination;
}

export interface Pagination {
	/**
	 * @pattern ^\d+$
	 */
	page?: string;
	/**
	 * @pattern ^\d+$
	 */
	pagesize?: string;
	/**
	 * @pattern ^\d+$
	 */
	total?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalPage?: string;
}

export interface OrderLogSearchResp {
	orderLogs?: OrderLog[];
	pagination?: Pagination;
}

export interface OrderLog {
	logId?: string;
	/**
	 * @pattern ^\d+$
	 */
	operatorId?: string;
	operatorName?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderStatusId?: string;
	content?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	createDate?: string;
	/**
	 * @pattern ^\d+$
	 */
	logDate?: string;
}

export interface OrderLogCreateBatchReq {
	logInfoList?: OrderLogCreateReq[];
}

export interface OrderLogSearchContentReq {
	content?: string;
	pagination?: Pagination;
}

export interface PackageCustomerMatchReq {
	packageCode?: string;
	/**
	 * @pattern ^\d+$
	 */
	customerId?: string;
}

export interface PackageCustomerMatchResp {
	match?: boolean;
}

export interface UserModifyOrderResp {
	result?: AppcommonResultResp;
}

export interface AftersaleRedeliveryReq {
	packageCode?: string;
	orderNumber?: string;
}

export interface AftersaleRedeliveryResp {
	result?: AppcommonResultResp;
	info?: RedeliveryInfo;
}

export interface RedeliveryInfo {
	newPackageCode?: string;
	newOrderNumber?: string;
	/**
	 * @pattern ^\d+$
	 */
	newShipmentId?: string;
	/**
	 * @pattern ^\d+$
	 */
	newOrderId?: string;
}

export interface IsBatchExecutableReq {
	/**
	 * @pattern ^\d+$
	 */
	orderIds?: string[];
	batchOperationType?: BatchOperationType;
}

export interface IsBatchExecutableResp {
	result?: AppcommonResultResp;
}

export interface BatchCancellOrderReq {
	/**
	 * @pattern ^\d+$
	 */
	orderIds?: string[];
	cancelType?: CancelOrderEnum;
	platformId?: UserPlatform;
	refunds?: RefundsRequire;
	updateBy?: string;
}

export interface BatchCancellOrderResp {
	result?: AppcommonResultResp;
}

export interface BatchCreateAddedServiceReq {
	/**
	 * @pattern ^\d+$
	 */
	orderIds?: string[];
	serviceType?: AddServiceType[];
	createBy?: string;
	remark?: string;
}

export interface BatchCreateAddedServiceResp {
	result?: AppcommonResultResp;
}

export interface OrdersReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface ShipmentTypeAndWeightResp {
	shipmentType?: string;
	/**
	 * @pattern ^\d+$
	 */
	length?: string;
	/**
	 * @pattern ^\d+$
	 */
	width?: string;
	/**
	 * @pattern ^\d+$
	 */
	height?: string;
	/**
	 * @pattern ^\d+$
	 */
	volume_weight?: string;
	/**
	 * @pattern ^\d+$
	 */
	actual_weight?: string;
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface OrderInvoiceDownloadReq {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
}

export interface OrderInvoiceDownloadResp {
	shipToName?: string;
	shipToPhone?: string;
	paymentNumber?: string;
	paymentType?: string;
	issuesDate?: string;
	paymentStatus?: string;
	catalog?: string;
	orderInfos?: OrderInvoice[];
	/**
	 * @pattern ^\d+$
	 */
	totalGst?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalShippingFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalDeliveryFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalStorageFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalValueAddedService?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalInsuranceFee?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalItemsSubTotal?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalDiscount?: string;
	/**
	 * @pattern ^\d+$
	 */
	totalFee?: string;
}

export interface OrderInvoice {
	orderNumber?: string;
	productName?: string;
	/**
	 * @pattern ^\d+$
	 */
	qty?: string;
	/**
	 * @pattern ^\d+$
	 */
	subTotal?: string;
	/**
	 * @pattern ^\d+$
	 */
	offset?: string;
}

export interface OrdersStatusResp {
	/**
	 * @pattern ^\d+$
	 */
	orderId?: string;
	/**
	 * @pattern ^\d+$
	 */
	statusId?: string;
}

export interface SetEzShipOMSMessageQueueStatusReq {
	/**
	 * @pattern ^\d+$
	 */
	id?: string;
	/**
	 * @pattern ^\d+$
	 */
	status?: string;
	requestor?: string;
}

export interface SetEzShipOMSMessageQueueStatusResp {
	result?: EzShipOMSResult;
}

export interface GetOrderItemDeclaredValueReq {
	/**
	 * @pattern ^\d+$
	 */
	orderID?: string;
}

export interface GetOrderItemDeclaredValueResp {
	result?: AppcommonResultResp;
	/**
	 * @pattern ^\d+$
	 */
	orderID?: string;
	/**
	 * @pattern ^\d+$
	 */
	declaredValue?: string;
	itemInfos?: EzShipOMSDeclaredItemInfo[];
}

export interface GetHscodeListReq {

}

export interface GetHscodeListResp {
	result?: AppcommonResultResp;
	data?: EzShipOMSHscodeModel[];
	/**
	 * @pattern ^\d+$
	 */
	memTS?: string;
	/**
	 * @pattern ^\d+$
	 */
	redisTS?: string;
}

export interface OrderOriginListResp {
	origins?: OrderOrigin[];
}

export interface OrderOrigin {
	code?: EzShipOMSOrderOriginEnum;
	name?: string;
}



export function SubmitNewOrder(payload: Partial<SubmitNewOrderReq>, options?: any) {
	return webapi<SubmitNewOrderResp>("ezShipOMS.EzshipOMS/SubmitNewOrder", payload, options);
}

export function OrderDetail(payload: Partial<OrderDetailReq>, options?: any) {
	return webapi<OrderDetailResp>("ezShipOMS.EzshipOMS/OrderDetail", payload, options);
}

export function OrderPakgeLogistics(payload: Partial<LogisticsReq>, options?: any) {
	return webapi<LogisticsResp>("ezShipOMS.EzshipOMS/OrderPakgeLogistics", payload, options);
}

export function OrderPayInfo(payload: Partial<PayInfoReq>, options?: any) {
	return webapi<PayInfoResp>("ezShipOMS.EzshipOMS/OrderPayInfo", payload, options);
}

export function OrderLogs(payload: Partial<OrderLogReq>, options?: any) {
	return webapi<OrderLogResp>("ezShipOMS.EzshipOMS/OrderLogs", payload, options);
}

export function CreateAddedService(payload: Partial<CreateAddedServiceReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/CreateAddedService", payload, options);
}

export function OrderAddedService(payload: Partial<GetAddedServiceReq>, options?: any) {
	return webapi<AddedServicesResp>("ezShipOMS.EzshipOMS/OrderAddedService", payload, options);
}

export function CancelAddedService(payload: Partial<CancelAddedServiceReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/CancelAddedService", payload, options);
}

export function CancelOrder(payload: Partial<CancelOrderReq>, options?: any) {
	return webapi<CancelOrderResp>("ezShipOMS.EzshipOMS/CancelOrder", payload, options);
}

export function ModifyDeclaredAmount(payload: Partial<ModifyDeclaredReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/ModifyDeclaredAmount", payload, options);
}

export function AddRemarks(payload: Partial<AddRemarkReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/AddRemarks", payload, options);
}

export function SearchOrder(payload: Partial<SearchOrderReq>, options?: any) {
	return webapi<SearchOrderResp>("ezShipOMS.EzshipOMS/SearchOrder", payload, options);
}

export function CancelDeliveryParcel(payload: Partial<CancelDeliveryParcelReq>, options?: any) {
	return webapi<CancelDeliveryParcelResp>("ezShipOMS.EzshipOMS/CancelDeliveryParcel", payload, options);
}

export function SplitShipmentParcel(payload: Partial<SplitShipmentParcelReq>, options?: any) {
	return webapi<SplitShipmentParcelResp>("ezShipOMS.EzshipOMS/SplitShipmentParcel", payload, options);
}

export function UpdateOrderStatus(payload: Partial<RpcUpdateOrderStatusReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/UpdateOrderStatus", payload, options);
}

export function ParcelStatusList(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<EzShipOMSParcelStatusListResp>("ezShipOMS.EzshipOMS/ParcelStatusList", payload, options);
}

export function DeliveryMethodList(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<EzShipOMSDeliveryMethodListResp>("ezShipOMS.EzshipOMS/DeliveryMethodList", payload, options);
}

export function WarehouseList(payload: Partial<EzShipOMSWarehouseListReq>, options?: any) {
	return webapi<EzShipOMSWarehouseListResp>("ezShipOMS.EzshipOMS/WarehouseList", payload, options);
}

export function OrderStatusList(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<EzShipOMSOrderStatusListResp>("ezShipOMS.EzshipOMS/OrderStatusList", payload, options);
}

export function DesCountryCode(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<EzShipOMSDesCountryCodeListResp>("ezShipOMS.EzshipOMS/DesCountryCode", payload, options);
}

export function GetCnHscodeList(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<EzShipOMSCnHscodeResp>("ezShipOMS.EzshipOMS/GetCnHscodeList", payload, options);
}

export function ShippingMethodList(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<EzShipOMSShippingMethodListResp>("ezShipOMS.EzshipOMS/ShippingMethodList", payload, options);
}

export function LogisticsCOList(payload: Partial<EzShipOMSLogisticsListReq>, options?: any) {
	return webapi<EzShipOMSLogisticsListResp>("ezShipOMS.EzshipOMS/LogisticsCOList", payload, options);
}

export function LogisticByName(payload: Partial<EzShipOMSLogisticByNameReq>, options?: any) {
	return webapi<EzShipOMSLogisticByNameResp>("ezShipOMS.EzshipOMS/LogisticByName", payload, options);
}

export function GetPackageRemark(payload: Partial<PackageRemarkReq>, options?: any) {
	return webapi<PackageRemarkResp>("ezShipOMS.EzshipOMS/GetPackageRemark", payload, options);
}

export function AddPackageRemark(payload: Partial<AddPackageRemarkReq>, options?: any) {
	return webapi<AddPackageRemarkResp>("ezShipOMS.EzshipOMS/AddPackageRemark", payload, options);
}

export function GetDeliveryPackage(payload: Partial<DeliveryPackageReq>, options?: any) {
	return webapi<DeliveryPackageResp>("ezShipOMS.EzshipOMS/GetDeliveryPackage", payload, options);
}

export function AddDeliveryRemark(payload: Partial<AddDeliveryRemarkReq>, options?: any) {
	return webapi<AddDeliveryRemarkResp>("ezShipOMS.EzshipOMS/AddDeliveryRemark", payload, options);
}

export function GetDeliveryRemark(payload: Partial<GetDeliveryRemarkReq>, options?: any) {
	return webapi<GetDeliveryRemarkResp>("ezShipOMS.EzshipOMS/GetDeliveryRemark", payload, options);
}

export function SearchPackage(payload: Partial<SearchPackageReq>, options?: any) {
	return webapi<SearchPackageResp>("ezShipOMS.EzshipOMS/SearchPackage", payload, options);
}

export function PackageDetail(payload: Partial<PackageDetailReq>, options?: any) {
	return webapi<PackageDetailResp>("ezShipOMS.EzshipOMS/PackageDetail", payload, options);
}

export function AddPackageLog(payload: Partial<AddPackageLogReq>, options?: any) {
	return webapi<AddPackageLogResp>("ezShipOMS.EzshipOMS/AddPackageLog", payload, options);
}

export function GetPackageLog(payload: Partial<PackageLogReq>, options?: any) {
	return webapi<PackageLogResp>("ezShipOMS.EzshipOMS/GetPackageLog", payload, options);
}

export function GetPackageTrail(payload: Partial<PackageTrailReq>, options?: any) {
	return webapi<PackageTrailResp>("ezShipOMS.EzshipOMS/GetPackageTrail", payload, options);
}

export function GetPackageFaceInfo(payload: Partial<PackageFaceInfoReq>, options?: any) {
	return webapi<PackageFaceInfoResp>("ezShipOMS.EzshipOMS/GetPackageFaceInfo", payload, options);
}

export function GetDeliveryDetail(payload: Partial<DeliveryDetailReq>, options?: any) {
	return webapi<DeliveryDetailResp>("ezShipOMS.EzshipOMS/GetDeliveryDetail", payload, options);
}

export function OrderLogCreate(payload: Partial<OrderLogCreateReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/OrderLogCreate", payload, options);
}

export function OrderLogCreateBatch(payload: Partial<OrderLogCreateBatchReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/OrderLogCreateBatch", payload, options);
}

export function OrderLogSearch(payload: Partial<OrderLogSearchReq>, options?: any) {
	return webapi<OrderLogSearchResp>("ezShipOMS.EzshipOMS/OrderLogSearch", payload, options);
}

export function OrderLogSearchContent(payload: Partial<OrderLogSearchContentReq>, options?: any) {
	return webapi<OrderLogSearchResp>("ezShipOMS.EzshipOMS/OrderLogSearchContent", payload, options);
}

export function GetAddedServiceTerm(payload: Partial<AddedServiceTermReq>, options?: any) {
	return webapi<AddedServiceTermResp>("ezShipOMS.EzshipOMS/GetAddedServiceTerm", payload, options);
}

export function GetDeclaredAmount(payload: Partial<DeclaredAmountReq>, options?: any) {
	return webapi<DeclaredAmountResp>("ezShipOMS.EzshipOMS/GetDeclaredAmount", payload, options);
}

export function EditDeliveryInfo(payload: Partial<EditDeliveryInfoReq>, options?: any) {
	return webapi<CommonEmpty>("ezShipOMS.EzshipOMS/EditDeliveryInfo", payload, options);
}

export function GetDelayNoticeTemplate(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<GetDelayNoticeTemplateResp>("ezShipOMS.EzshipOMS/GetDelayNoticeTemplate", payload, options);
}

export function CreateDelayNotice(payload: Partial<CreateDelayNoticeReq>, options?: any) {
	return webapi<CreateDelayNoticeResp>("ezShipOMS.EzshipOMS/CreateDelayNotice", payload, options);
}

export function GetDelayNotice(payload: Partial<GetDelayNoticeReq>, options?: any) {
	return webapi<GetDelayNoticeResp>("ezShipOMS.EzshipOMS/GetDelayNotice", payload, options);
}

export function PackageCustomerMatch(payload: Partial<PackageCustomerMatchReq>, options?: any) {
	return webapi<PackageCustomerMatchResp>("ezShipOMS.EzshipOMS/PackageCustomerMatch", payload, options);
}

export function ModifyOrder(payload: Partial<EzShipOMSSubmitOrder2MQ>, options?: any) {
	return webapi<UserModifyOrderResp>("ezShipOMS.EzshipOMS/ModifyOrder", payload, options);
}

export function Login(payload: Partial<EzShipOMSLoginReq>, options?: any) {
	return webapi<EzShipOMSLoginRsp>("ezShipOMS.EzshipOMS/Login", payload, options);
}

export function UserLoginInfo(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<EzShipOMSLoginRsp>("ezShipOMS.EzshipOMS/UserLoginInfo", payload, options);
}

export function AftersaleRedelivery(payload: Partial<AftersaleRedeliveryReq>, options?: any) {
	return webapi<AftersaleRedeliveryResp>("ezShipOMS.EzshipOMS/AftersaleRedelivery", payload, options);
}

export function IsBatchExecutable(payload: Partial<IsBatchExecutableReq>, options?: any) {
	return webapi<IsBatchExecutableResp>("ezShipOMS.EzshipOMS/IsBatchExecutable", payload, options);
}

export function BatchCancellOrder(payload: Partial<BatchCancellOrderReq>, options?: any) {
	return webapi<BatchCancellOrderResp>("ezShipOMS.EzshipOMS/BatchCancellOrder", payload, options);
}

export function BatchCreateAddedService(payload: Partial<BatchCreateAddedServiceReq>, options?: any) {
	return webapi<BatchCreateAddedServiceResp>("ezShipOMS.EzshipOMS/BatchCreateAddedService", payload, options);
}

export function GetOrdersShipmentTypeAndWeight(payload: Partial<OrdersReq>, options?: any) {
	return webapi<ShipmentTypeAndWeightResp>("ezShipOMS.EzshipOMS/GetOrdersShipmentTypeAndWeight", payload, options);
}

export function OrderInvoiceDownload(payload: Partial<OrderInvoiceDownloadReq>, options?: any) {
	return webapi<OrderInvoiceDownloadResp>("ezShipOMS.EzshipOMS/OrderInvoiceDownload", payload, options);
}

export function GetOrderStatus(payload: Partial<OrdersReq>, options?: any) {
	return webapi<OrdersStatusResp>("ezShipOMS.EzshipOMS/GetOrderStatus", payload, options);
}

export function SetEzShipOMSMessageQueueStatus(payload: Partial<SetEzShipOMSMessageQueueStatusReq>, options?: any) {
	return webapi<SetEzShipOMSMessageQueueStatusResp>("ezShipOMS.EzshipOMS/SetEzShipOMSMessageQueueStatus", payload, options);
}

export function GetOrderItemDeclaredValue(payload: Partial<GetOrderItemDeclaredValueReq>, options?: any) {
	return webapi<GetOrderItemDeclaredValueResp>("ezShipOMS.EzshipOMS/GetOrderItemDeclaredValue", payload, options);
}

export function GetHscodeList(payload: Partial<GetHscodeListReq>, options?: any) {
	return webapi<GetHscodeListResp>("ezShipOMS.EzshipOMS/GetHscodeList", payload, options);
}

export function OrderOriginList(payload: Partial<CommonEmpty>, options?: any) {
	return webapi<OrderOriginListResp>("ezShipOMS.EzshipOMS/OrderOriginList", payload, options);
}


export default {
	SubmitNewOrder,
	OrderDetail,
	OrderPakgeLogistics,
	OrderPayInfo,
	OrderLogs,
	CreateAddedService,
	OrderAddedService,
	CancelAddedService,
	CancelOrder,
	ModifyDeclaredAmount,
	AddRemarks,
	SearchOrder,
	CancelDeliveryParcel,
	SplitShipmentParcel,
	UpdateOrderStatus,
	ParcelStatusList,
	DeliveryMethodList,
	WarehouseList,
	OrderStatusList,
	DesCountryCode,
	GetCnHscodeList,
	ShippingMethodList,
	LogisticsCOList,
	LogisticByName,
	GetPackageRemark,
	AddPackageRemark,
	GetDeliveryPackage,
	AddDeliveryRemark,
	GetDeliveryRemark,
	SearchPackage,
	PackageDetail,
	AddPackageLog,
	GetPackageLog,
	GetPackageTrail,
	GetPackageFaceInfo,
	GetDeliveryDetail,
	OrderLogCreate,
	OrderLogCreateBatch,
	OrderLogSearch,
	OrderLogSearchContent,
	GetAddedServiceTerm,
	GetDeclaredAmount,
	EditDeliveryInfo,
	GetDelayNoticeTemplate,
	CreateDelayNotice,
	GetDelayNotice,
	PackageCustomerMatch,
	ModifyOrder,
	Login,
	UserLoginInfo,
	AftersaleRedelivery,
	IsBatchExecutable,
	BatchCancellOrder,
	BatchCreateAddedService,
	GetOrdersShipmentTypeAndWeight,
	OrderInvoiceDownload,
	GetOrderStatus,
	SetEzShipOMSMessageQueueStatus,
	GetOrderItemDeclaredValue,
	GetHscodeList,
	OrderOriginList,
};